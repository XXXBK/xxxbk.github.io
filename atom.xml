<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-07-17T01:06:25.739Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>XXXBK</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《水印处理的成长日记：从0开始的PDF处理之路》</title>
    <link href="http://example.com/2025/07/16/%E3%80%8A%E6%B0%B4%E5%8D%B0%E5%A4%84%E7%90%86%E7%9A%84%E6%88%90%E9%95%BF%E6%97%A5%E8%AE%B0%EF%BC%9A%E4%BB%8E0%E5%BC%80%E5%A7%8B%E7%9A%84PDF%E5%A4%84%E7%90%86%E4%B9%8B%E8%B7%AF%E3%80%8B/"/>
    <id>http://example.com/2025/07/16/%E3%80%8A%E6%B0%B4%E5%8D%B0%E5%A4%84%E7%90%86%E7%9A%84%E6%88%90%E9%95%BF%E6%97%A5%E8%AE%B0%EF%BC%9A%E4%BB%8E0%E5%BC%80%E5%A7%8B%E7%9A%84PDF%E5%A4%84%E7%90%86%E4%B9%8B%E8%B7%AF%E3%80%8B/</id>
    <published>2025-07-16T10:02:16.000Z</published>
    <updated>2025-07-17T01:06:25.739Z</updated>
    
    <content type="html"><![CDATA[<p>《水印处理的成长日记：从0开始的PDF处理之路》</p><p>在日常办公和学习中，我们经常会遇到带有水印的 PDF 文档，这些水印不仅影响阅读体验，还可能干扰文档的二次编辑和使用。本文将带你从零开始，一步步构建一个功能完善的 PDF 水印去除工具，实现从单文件处理到批量转换的完整解决方案。</p><p>需求分析：为什么需要 PDF 水印去除工具</p><p>PDF 水印通常分为可见水印和不可见水印两类。可见水印多以文字、Logo 等形式存在，虽然不影响内容的可读性，但在文档分发、打印等场景下会显得不够专业。特别是一些带有 “内部资料”、”草稿” 等字样的水印，在正式场合使用时需要去除。</p><p>理想的 PDF 水印去除工具应具备以下功能：</p><ul><li><p>精准识别并去除各类可见水印</p></li><li><p>保留原文档的文本格式和图片内容</p></li><li><p>支持批量处理多个 PDF 文件</p></li><li><p>提供直观易用的图形界面</p></li><li><p>输出格式支持 Word，方便后续编辑</p></li></ul><p>基础版本：实现单文件水印去除功能</p><p>我们先从基础版本开始，搭建一个能够处理单个 PDF 文件的水印去除工具。这个版本将实现水印识别、内容提取和格式转换的核心功能。</p><h3 id="核心技术选型-xA"><a href="#核心技术选型-xA" class="headerlink" title="核心技术选型&#xA;"></a>核心技术选型&#xA;</h3><p>实现 PDF 水印去除需要用到以下关键库：</p><ul><li><p><code>fitz</code>（PyMuPDF）：用于 PDF 文件的解析和内容提取</p></li><li><p><code>python-docx</code>：用于生成 Word 格式的输出文件</p></li><li><p><code>PIL</code>（Pillow）：用于处理 PDF 中的图片内容</p></li><li><p><code>PyQt5</code>：用于构建图形用户界面</p></li></ul><h3 id="核心功能实现-xA"><a href="#核心功能实现-xA" class="headerlink" title="核心功能实现&#xA;"></a>核心功能实现&#xA;</h3><p>基础版本的核心功能主要分为三个模块：PDF 信息提取、水印识别与去除、Word 文档生成。</p><h4 id="PDF-信息提取模块-xA"><a href="#PDF-信息提取模块-xA" class="headerlink" title="PDF 信息提取模块&#xA;"></a>PDF 信息提取模块&#xA;</h4><p><code>extract_full_pdf_info</code>函数负责从 PDF 中提取文本内容、图片和格式信息：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">def extract\_full\_pdf\_info(pdf\_path: str) -&gt; List\[Dict\[str, Any]]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if not os.path.exists(pdf\_path):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       raise FileNotFoundError(f&quot;PDF文件未找到: &#123;pdf\_path&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc = fitz.open(pdf\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   full\_info = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   temp\_image\_dir = os.path.abspath(&quot;temp\_pdf\_images&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   os.makedirs(temp\_image\_dir, exist\_ok=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for page\_num in range(len(doc)):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       page = doc\[page\_num]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       page\_data = &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;page\_number&quot;: page\_num + 1,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;page\_size&quot;: &#123;&quot;width&quot;: page.rect.width, &quot;height&quot;: page.rect.height&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;rotation&quot;: page.rotation,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;text\_content&quot;: \[],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;images&quot;: \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 提取文本内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       text\_blocks = page.get\_text(&quot;dict&quot;)\[&quot;blocks&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for block in text\_blocks:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if block\[&quot;type&quot;] == 0:  # 文本块</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 处理文本块、行和文字片段...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 提取图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       images = page.get\_images(full=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 处理图片提取、软掩码合并和格式转换...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       full\_info.append(page\_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   return full\_info</span><br></pre></td></tr></table></figure></div><h4 id="水印识别与去除模块-xA"><a href="#水印识别与去除模块-xA" class="headerlink" title="水印识别与去除模块&#xA;"></a>水印识别与去除模块&#xA;</h4><p><code>remove_watermark_by_alpha</code>函数通过分析文本的透明度、字体大小和颜色来识别并去除水印：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">def remove\_watermark\_by\_alpha(full\_info: List\[Dict\[str, Any]]) -&gt; List\[Dict\[str, Any]]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   clean\_full\_info = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   watermark\_removed\_count = 0</span><br><span class="line"></span><br><span class="line">&amp;#x20;   ALPHA\_THRESHOLD = 150  # 透明度阈值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   TARGET\_FONT\_SIZE = 18  # 水印字体大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   FONT\_SIZE\_TOLERANCE = 1  # 字体大小容差</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   TARGET\_COLOR\_INT\_VALUE = 13882323  # 水印颜色值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for page in full\_info:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       clean\_text\_blocks = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for text\_block in page\[&quot;text\_content&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 处理文本块，过滤水印内容...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           watermark\_removed\_count += 1  # 统计去除的水印数量</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       clean\_page = &#123;\*\*page, &quot;text\_content&quot;: clean\_text\_blocks, &quot;images&quot;: page\[&quot;images&quot;]&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       clean\_full\_info.append(clean\_page)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   print(f&quot;水印移除完成。共移除 &#123;watermark\_removed\_count&#125; 处水印文本。&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   return clean\_full\_info</span><br></pre></td></tr></table></figure></div><h4 id="Word-文档生成模块-xA"><a href="#Word-文档生成模块-xA" class="headerlink" title="Word 文档生成模块&#xA;"></a>Word 文档生成模块&#xA;</h4><p><code>generate_word_from_data</code>函数将清理后的内容转换为 Word 文档：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">def generate\_word\_from\_data(clean\_info: List\[Dict\[str, Any]], output\_word\_path: str) -&gt; None:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc = Document()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   font\_mapping = get\_system\_font\_mapping()  # 字体映射表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 收集并排序文本和图片元素...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 生成Word内容，保留原格式...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       doc.save(output\_word\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       print(f&quot;Word文档已保存至：&#123;output\_word\_path&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   except Exception as e:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       print(f&quot;保存Word文档失败：&#123;e&#125;&quot;)</span><br></pre></td></tr></table></figure></div><h3 id="基础版本界面设计-xA"><a href="#基础版本界面设计-xA" class="headerlink" title="基础版本界面设计&#xA;"></a>基础版本界面设计&#xA;</h3><p>基础版本采用简洁的图形界面，主要包含文件选择、处理和状态显示功能：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">class PdfWatermarkRemoverApp(QWidget):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def \_\_init\_\_(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       super().\_\_init\_\_()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.setWindowTitle(&quot;PDF水印移除工具&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.setFixedSize(750, 400)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.init\_ui()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 初始化其他属性...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def init\_ui(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout = QVBoxLayout()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 设置布局、添加文件选择框、处理按钮和状态标签...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def browse\_pdf\_file(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 打开文件对话框，选择PDF文件...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def start\_processing(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 开始处理PDF文件...</span><br></pre></td></tr></table></figure></div><p>优化版本：功能增强与体验提升</p><p>在基础版本的基础上，我们进一步优化功能，增加批量处理能力，提升用户体验，打造一个更实用的工具。</p><h3 id="核心功能改进-xA"><a href="#核心功能改进-xA" class="headerlink" title="核心功能改进&#xA;"></a>核心功能改进&#xA;</h3><p>优化版本主要在以下几个方面进行了改进：</p><h4 id="1-增加文件夹批量处理功能-xA"><a href="#1-增加文件夹批量处理功能-xA" class="headerlink" title="1. 增加文件夹批量处理功能&#xA;"></a>1. 增加文件夹批量处理功能&#xA;</h4><p>用户可以选择整个文件夹进行批量处理，工具会自动识别并处理文件夹中的所有 PDF 文件：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">def browse\_folder(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   folder\_path = QFileDialog.getExistingDirectory(self, &quot;选择包含 PDF 文件的文件夹&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if folder\_path:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processing\_queue = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 遍历文件夹，收集所有PDF文件...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.total\_files\_to\_process = len(self.processing\_queue)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processing\_mode = &quot;folder&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 更新界面显示...</span><br></pre></td></tr></table></figure></div><h4 id="2-改进的文件处理流程-xA"><a href="#2-改进的文件处理流程-xA" class="headerlink" title="2. 改进的文件处理流程&#xA;"></a>2. 改进的文件处理流程&#xA;</h4><p>引入处理队列和工作线程，支持连续处理多个文件，并显示实时进度：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">def process\_next\_file(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if not self.processing\_queue:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.on\_all\_processing\_finished()  # 所有文件处理完成</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       return</span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   current\_pdf\_path = self.processing\_queue.pop(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 确定输出路径...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 检查文件是否已存在，处理覆盖逻辑...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   self.processed\_count += 1</span><br><span class="line"></span><br><span class="line">&amp;#x20;   self.status\_label.setText(f&quot;正在处理第 &#123;self.processed\_count&#125; / &#123;self.total\_files\_to\_process&#125; 个文件...&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 启动工作线程处理当前文件...</span><br></pre></td></tr></table></figure></div><h4 id="3-增强的图片处理能力-xA"><a href="#3-增强的图片处理能力-xA" class="headerlink" title="3. 增强的图片处理能力&#xA;"></a>3. 增强的图片处理能力&#xA;</h4><p>优化图片提取和转换逻辑，更好地保留图片质量和透明度：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">def convert\_image\_format(temp\_path, target\_format=&#x27;png&#x27;):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       with Image.open(temp\_path) as img:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           original\_mode = img.mode</span><br><span class="line"></span><br><span class="line">&amp;#x20;           new\_path = os.path.splitext(temp\_path)\[0] + f&#x27;.&#123;target\_format&#125;&#x27;</span><br><span class="line"></span><br><span class="line">&amp;#x20;           if &#x27;A&#x27; in original\_mode:  # 处理透明图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if original\_mode != &#x27;RGBA&#x27;:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   img = img.convert(&#x27;RGBA&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               img.save(new\_path, format=target\_format.upper())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 输出转换信息...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 处理非透明图片...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           return new\_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   except Exception as e:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 处理转换错误...</span><br></pre></td></tr></table></figure></div><h4 id="4-更智能的文本格式处理-xA"><a href="#4-更智能的文本格式处理-xA" class="headerlink" title="4. 更智能的文本格式处理&#xA;"></a>4. 更智能的文本格式处理&#xA;</h4><p>优化文本排版逻辑，自动识别标题、段落，保持原文档的格式风格：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">\# 分析最常见的字体大小作为正文字体</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if all\_font\_sizes:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   from collections import Counter</span><br><span class="line"></span><br><span class="line">&amp;#x20;   most\_common\_size = Counter(all\_font\_sizes).most\_common(1)\[0]\[0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   print(f&quot;分析得出正文字体大小: &#123;most\_common\_size&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   title\_font\_threshold = most\_common\_size \* 1.2  # 标题字体阈值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 使用默认值...</span><br></pre></td></tr></table></figure></div><h3 id="界面与交互优化-xA"><a href="#界面与交互优化-xA" class="headerlink" title="界面与交互优化&#xA;"></a>界面与交互优化&#xA;</h3><p>优化版本的界面更加友好，交互更加流畅：</p><h4 id="1-直观的文件选择界面-xA"><a href="#1-直观的文件选择界面-xA" class="headerlink" title="1. 直观的文件选择界面&#xA;"></a>1. 直观的文件选择界面&#xA;</h4><p>提供文件和文件夹两种选择方式，满足不同场景需求：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">\# 选择文件按钮</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">self.browse\_files\_button = QPushButton(&quot;选择文件...&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">self.browse\_files\_button.clicked.connect(self.browse\_pdf\_files)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 选择文件夹按钮</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">self.browse\_folder\_button = QPushButton(&quot;选择文件夹...&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">self.browse\_folder\_button.clicked.connect(self.browse\_folder)</span><br></pre></td></tr></table></figure></div><h4 id="2-实时进度显示-xA"><a href="#2-实时进度显示-xA" class="headerlink" title="2. 实时进度显示&#xA;"></a>2. 实时进度显示&#xA;</h4><p>清晰展示当前处理进度和状态，让用户了解处理情况：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">self.status\_label = QLabel(&quot;等待选择文件/文件夹...&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">self.current\_file\_status\_label = QLabel(&quot;&quot;)  # 显示当前处理的文件名</span><br></pre></td></tr></table></figure></div><h4 id="3-文件覆盖策略选择-xA"><a href="#3-文件覆盖策略选择-xA" class="headerlink" title="3. 文件覆盖策略选择&#xA;"></a>3. 文件覆盖策略选择&#xA;</h4><p>当输出文件已存在时，提供灵活的覆盖选项：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\# 覆盖所有文件复选框</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">self.overwrite\_all\_checkbox = QCheckBox(&quot;对当前批次的所有冲突文件执行此操作&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">self.overwrite\_all\_checkbox.setVisible(False)  # 默认隐藏</span><br></pre></td></tr></table></figure></div><p>工具使用指南</p><p>使用优化后的 PDF 水印去除工具非常简单，只需几个步骤即可完成水印去除：</p><p>1.** 选择文件或文件夹 **：点击 “选择文件” 按钮处理单个 PDF，或点击 “选择文件夹” 按钮批量处理多个 PDF。<br>**</p><p><strong>2.</strong> 开始处理 **：点击 “开始处理” 按钮，工具将自动去除水印并转换为 Word 格式。<br>**</p><p><strong>3.</strong> 查看结果 **：处理完成后，工具会显示成功和失败的文件统计，结果文件将保存在源文件所在目录的 “_无水印” 子文件夹中。</p><p>常见问题与解决方案</p><p>在使用过程中，可能会遇到一些常见问题，以下是解决方案：</p><p>1.** 水印去除不彻底 <strong>：可能是水印特征发生变化，可以调整</strong><code>remove_watermark_by_alpha</code>**函数中的阈值参数。<br>**</p><p><strong>2.</strong> 图片显示异常 **：部分特殊格式的图片可能转换失败，可以尝试更新 Pillow 库到最新版本。<br>**</p><p><strong>3.</strong> 格式错乱 **：复杂排版的 PDF 转换后可能出现格式问题，可以手动调整 Word 文档的样式。<br>**</p><p><strong>4.</strong> 处理速度慢 **：大型 PDF 文件处理需要较长时间，请耐心等待，工具正在后台工作。</p><p>总结与展望</p><p>通过本文介绍的方法，我们成功构建了一个功能完善的 PDF 水印去除工具，实现了从单文件处理到批量转换的完整解决方案。该工具能够精准去除水印，保留原文档的文本格式和图片内容，大大提高了文档处理效率。</p><p>未来，我们可以从以下几个方面进一步优化这个工具：</p><ul><li><p>增加对更多水印类型的支持，如图片水印、倾斜文字水印等</p></li><li><p>优化 OCR 功能，提高扫描版 PDF 的处理效果</p></li><li><p>增加自定义水印规则的功能，允许用户手动标记水印特征</p></li><li><p>支持更多输出格式，如 Markdown、HTML 等</p></li><li><p>开发云同步功能，实现跨设备使用</p></li></ul><p>完整代码实现</p><p>以下是完整的 PDF 水印去除工具代码，包含所有功能模块和界面实现：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import tempfile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from typing import List, Dict, Any, Tuple, Optional</span><br><span class="line"></span><br><span class="line">from collections import Counter</span><br><span class="line"></span><br><span class="line">from PyQt5.QtWidgets import (QApplication, QWidget, QVBoxLayout, QHBoxLayout,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           QPushButton, QLabel, QFileDialog, QProgressBar,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           QMessageBox, QCheckBox, QFrame)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from PyQt5.QtCore import Qt, QThread, pyqtSignal, QObject</span><br><span class="line"></span><br><span class="line">from PyQt5.QtGui import QFont</span><br><span class="line"></span><br><span class="line">import fitz  # PyMuPDF</span><br><span class="line"></span><br><span class="line">from docx import Document</span><br><span class="line"></span><br><span class="line">from docx.shared import Pt, Inches</span><br><span class="line"></span><br><span class="line">from docx.oxml.ns import qn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from docx.enum.text import WD\_ALIGN\_PARAGRAPH</span><br><span class="line"></span><br><span class="line">from PIL import Image</span><br><span class="line"></span><br><span class="line">\# 全局临时目录，用于存储提取的图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GLOBAL\_TEMP\_DIR = os.path.join(tempfile.gettempdir(), &quot;pdf\_watermark\_remover&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">os.makedirs(GLOBAL\_TEMP\_DIR, exist\_ok=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class PDFProcessor:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;PDF处理核心类，负责提取内容、去除水印和生成Word文档&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   @staticmethod</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def extract\_full\_pdf\_info(pdf\_path: str) -&gt; List\[Dict\[str, Any]]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;提取PDF中的文本、图片和格式信息&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       if not os.path.exists(pdf\_path):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           raise FileNotFoundError(f&quot;PDF文件未找到: &#123;pdf\_path&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       doc = fitz.open(pdf\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       full\_info = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       temp\_image\_dir = os.path.join(GLOBAL\_TEMP\_DIR, os.path.basename(pdf\_path).replace(&#x27;.pdf&#x27;, &#x27;&#x27;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       os.makedirs(temp\_image\_dir, exist\_ok=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for page\_num in range(len(doc)):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           page = doc\[page\_num]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           page\_data = &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               &quot;page\_number&quot;: page\_num + 1,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               &quot;page\_size&quot;: &#123;&quot;width&quot;: page.rect.width, &quot;height&quot;: page.rect.height&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               &quot;rotation&quot;: page.rotation,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               &quot;text\_content&quot;: \[],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               &quot;images&quot;: \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 提取文本内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           text\_blocks = page.get\_text(&quot;dict&quot;)\[&quot;blocks&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for block in text\_blocks:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if block\[&quot;type&quot;] == 0:  # 文本块</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   text\_block\_data = &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       &quot;bbox&quot;: block\[&quot;bbox&quot;],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       &quot;lines&quot;: \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   for line in block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       line\_data = &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           &quot;spans&quot;: \[],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           &quot;bbox&quot;: line\[&quot;bbox&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           span\_data = &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                               &quot;text&quot;: span\[&quot;text&quot;],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                               &quot;font&quot;: span\[&quot;font&quot;],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                               &quot;size&quot;: span\[&quot;size&quot;],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                               &quot;color&quot;: span\[&quot;color&quot;],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                               &quot;flags&quot;: span\[&quot;flags&quot;],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                               &quot;bbox&quot;: span\[&quot;bbox&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           line\_data\[&quot;spans&quot;].append(span\_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       text\_block\_data\[&quot;lines&quot;].append(line\_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   page\_data\[&quot;text\_content&quot;].append(text\_block\_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 提取图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           images = page.get\_images(full=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for img\_index, img in enumerate(images):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               xref = img\[0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               base\_image = doc.extract\_image(xref)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               image\_bytes = base\_image\[&quot;image&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               image\_ext = base\_image\[&quot;ext&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               image\_width = base\_image\[&quot;width&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               image\_height = base\_image\[&quot;height&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 构建图片路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               img\_filename = f&quot;page\_&#123;page\_num+1&#125;\_img\_&#123;img\_index&#125;.&#123;image\_ext&#125;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;               img\_path = os.path.join(temp\_image\_dir, img\_filename)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 保存图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               with open(img\_path, &quot;wb&quot;) as f:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   f.write(image\_bytes)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 处理软掩码（透明度）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if base\_image\[&quot;smask&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   smask\_image = doc.extract\_image(base\_image\[&quot;smask&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   smask\_bytes = smask\_image\[&quot;image&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   smask\_path = os.path.join(temp\_image\_dir, f&quot;page\_&#123;page\_num+1&#125;\_img\_&#123;img\_index&#125;\_mask.&#123;image\_ext&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   with open(smask\_path, &quot;wb&quot;) as f:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       f.write(smask\_bytes)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 合并图片和掩码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   img\_path = PDFProcessor.merge\_image\_with\_mask(img\_path, smask\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   os.remove(smask\_path)  # 清理临时掩码文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 转换图片格式为PNG以确保兼容性</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if image\_ext.lower() != &#x27;png&#x27;:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   img\_path = PDFProcessor.convert\_image\_format(img\_path, &#x27;png&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 获取图片在页面中的位置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               img\_rect = page.get\_image\_rects(xref)\[0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               page\_data\[&quot;images&quot;].append(&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;path&quot;: img\_path,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;ext&quot;: image\_ext,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;width&quot;: image\_width,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;height&quot;: image\_height,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;rect&quot;: img\_rect,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;index&quot;: img\_index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           full\_info.append(page\_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       doc.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       return full\_info</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   @staticmethod</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def merge\_image\_with\_mask(image\_path: str, mask\_path: str) -&gt; str:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;合并图片和掩码以保留透明度&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           with Image.open(image\_path) as img, Image.open(mask\_path) as mask:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 确保图片和掩码尺寸一致</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if img.size != mask.size:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   mask = mask.resize(img.size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 合并图片和掩码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               img.putalpha(mask)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               new\_path = os.path.splitext(image\_path)\[0] + &#x27;\_merged.png&#x27;</span><br><span class="line"></span><br><span class="line">&amp;#x20;               img.save(new\_path, &#x27;PNG&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               os.remove(image\_path)  # 移除原始图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               return new\_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       except Exception as e:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           print(f&quot;合并图片和掩码失败: &#123;e&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           return image\_path  # 失败时返回原始图片路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   @staticmethod</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def convert\_image\_format(temp\_path: str, target\_format: str = &#x27;png&#x27;) -&gt; str:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;转换图片格式&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           with Image.open(temp\_path) as img:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               original\_mode = img.mode</span><br><span class="line"></span><br><span class="line">&amp;#x20;               new\_path = os.path.splitext(temp\_path)\[0] + f&#x27;.&#123;target\_format&#125;&#x27;</span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 处理透明图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if &#x27;A&#x27; in original\_mode:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   if original\_mode != &#x27;RGBA&#x27;:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       img = img.convert(&#x27;RGBA&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   img.save(new\_path, format=target\_format.upper())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 非透明图片直接转换</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   img.save(new\_path, format=target\_format.upper())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               os.remove(temp\_path)  # 移除原始格式图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               return new\_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       except Exception as e:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           print(f&quot;转换图片格式失败: &#123;e&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           return temp\_path  # 失败时返回原始路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   @staticmethod</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def remove\_watermark\_by\_alpha(full\_info: List\[Dict\[str, Any]]) -&gt; List\[Dict\[str, Any]]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;通过透明度、字体大小和颜色识别并去除水印&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       clean\_full\_info = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       watermark\_removed\_count = 0</span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 水印特征参数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       ALPHA\_THRESHOLD = 150  # 透明度阈值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       TARGET\_FONT\_SIZE = 18  # 水印字体大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       FONT\_SIZE\_TOLERANCE = 1  # 字体大小容差</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       TARGET\_COLOR\_INT\_VALUE = 13882323  # 水印颜色值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for page in full\_info:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           clean\_text\_blocks = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for text\_block in page\[&quot;text\_content&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               clean\_lines = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for line in text\_block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   clean\_spans = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 检查是否为水印文本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       is\_watermark = False</span><br><span class="line"></span><br><span class="line">&amp;#x20;                      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 检查字体大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       size\_diff = abs(span\[&quot;size&quot;] - TARGET\_FONT\_SIZE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       if size\_diff &lt;= FONT\_SIZE\_TOLERANCE:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           \# 检查颜色</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           if span\[&quot;color&quot;] == TARGET\_COLOR\_INT\_VALUE:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                               \# 检查透明度（通过flags判断）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                               \# flags的第3位表示透明度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                               if (span\[&quot;flags&quot;] &amp; 0b100) != 0:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                                   is\_watermark = True</span><br><span class="line"></span><br><span class="line">&amp;#x20;                          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       if not is\_watermark:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           clean\_spans.append(span)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           watermark\_removed\_count += 1</span><br><span class="line"></span><br><span class="line">&amp;#x20;                  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   if clean\_spans:  # 只保留有内容的行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       clean\_line = &#123;\*\*line, &quot;spans&quot;: clean\_spans&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       clean\_lines.append(clean\_line)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if clean\_lines:  # 只保留有内容的文本块</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   clean\_block = &#123;\*\* text\_block, &quot;lines&quot;: clean\_lines&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   clean\_text\_blocks.append(clean\_block)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 保留图片信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           clean\_page = &#123;\*\*page, &quot;text\_content&quot;: clean\_text\_blocks, &quot;images&quot;: page\[&quot;images&quot;]&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           clean\_full\_info.append(clean\_page)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       print(f&quot;水印移除完成。共移除 &#123;watermark\_removed\_count&#125; 处水印文本。&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       return clean\_full\_info</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   @staticmethod</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def get\_system\_font\_mapping() -&gt; Dict\[str, str]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;获取系统字体映射表，用于PDF到Word的字体转换&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       return &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;SimSun&quot;: &quot;宋体&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;SimHei&quot;: &quot;黑体&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;Microsoft YaHei&quot;: &quot;微软雅黑&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;KaiTi&quot;: &quot;楷体&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;FangSong&quot;: &quot;仿宋&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;Arial&quot;: &quot;Arial&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &quot;Times New Roman&quot;: &quot;Times New Roman&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 可以根据需要添加更多字体映射</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   @staticmethod</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def generate\_word\_from\_data(clean\_info: List\[Dict\[str, Any]], output\_word\_path: str) -&gt; None:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;从清理后的PDF信息生成Word文档&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       doc = Document()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       font\_mapping = PDFProcessor.get\_system\_font\_mapping()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 收集所有字体大小用于分析</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       all\_font\_sizes = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for page in clean\_info:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for block in page\[&quot;text\_content&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for line in block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       all\_font\_sizes.append(span\[&quot;size&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 分析最常见的字体大小作为正文字体</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if all\_font\_sizes:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           most\_common\_size = Counter(all\_font\_sizes).most\_common(1)\[0]\[0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           print(f&quot;分析得出正文字体大小: &#123;most\_common\_size&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           title\_font\_threshold = most\_common\_size \* 1.2  # 标题字体阈值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           most\_common\_size = 12  # 默认正文字体大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           title\_font\_threshold = 14  # 默认标题字体阈值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 处理每一页内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for page in clean\_info:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 为新页面添加分页符（第一页除外）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if page\[&quot;page\_number&quot;] &gt; 1:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               doc.add\_page\_break()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 添加页码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           page\_paragraph = doc.add\_paragraph()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           page\_run = page\_paragraph.add\_run(f&quot;第 &#123;page\[&#x27;page\_number&#x27;]&#125; 页&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           page\_run.font.size = Pt(9)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           page\_paragraph.alignment = WD\_ALIGN\_PARAGRAPH.CENTER</span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 收集页面上的所有元素（文本块和图片）并按位置排序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           page\_elements = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 添加文本块</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for block in page\[&quot;text\_content&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 使用文本块的边界框顶部作为排序依据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               block\_top = block\[&quot;bbox&quot;]\[1]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               page\_elements.append(&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;type&quot;: &quot;text&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;top&quot;: block\_top,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;data&quot;: block</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 添加图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for img in page\[&quot;images&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 使用图片的顶部位置作为排序依据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               img\_top = img\[&quot;rect&quot;]\[1]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               page\_elements.append(&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;type&quot;: &quot;image&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;top&quot;: img\_top,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   &quot;data&quot;: img</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 按元素在页面中的垂直位置排序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           page\_elements.sort(key=lambda x: x\[&quot;top&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 处理排序后的元素</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for element in page\_elements:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if element\[&quot;type&quot;] == &quot;text&quot;:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   PDFProcessor.\_add\_text\_block\_to\_doc(doc, element\[&quot;data&quot;], font\_mapping,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                                                     title\_font\_threshold, most\_common\_size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               elif element\[&quot;type&quot;] == &quot;image&quot;:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   PDFProcessor.\_add\_image\_to\_doc(doc, element\[&quot;data&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 保存生成的Word文档</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 确保输出目录存在</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           output\_dir = os.path.dirname(output\_word\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           os.makedirs(output\_dir, exist\_ok=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           doc.save(output\_word\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           print(f&quot;Word文档已保存至：&#123;output\_word\_path&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       except Exception as e:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           print(f&quot;保存Word文档失败：&#123;e&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           raise</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   @staticmethod</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def \_add\_text\_block\_to\_doc(doc, text\_block, font\_mapping, title\_threshold, normal\_size):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;将文本块添加到Word文档&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       for line in text\_block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           paragraph = doc.add\_paragraph()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               run = paragraph.add\_run(span\[&quot;text&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 设置字体</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               font\_name = span\[&quot;font&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 映射到系统可用字体</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               mapped\_font = font\_mapping.get(font\_name, font\_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   run.font.name = mapped\_font</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 设置中文字体</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   run.\_element.rPr.rFonts.set(qn(&#x27;w:eastAsia&#x27;), mapped\_font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               except Exception as e:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   print(f&quot;设置字体 &#123;mapped\_font&#125; 失败: &#123;e&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   run.font.name = &quot;宋体&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;                   run.\_element.rPr.rFonts.set(qn(&#x27;w:eastAsia&#x27;), &quot;宋体&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 设置字体大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   run.font.size = Pt(span\[&quot;size&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               except:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   run.font.size = Pt(normal\_size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 设置字体颜色（简化处理，仅使用黑白两色）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if span\[&quot;color&quot;] in (0, 255):  # 黑色或白色</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   run.font.color.rgb = None  # 使用默认颜色</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 转换PDF颜色值（整数）为RGB</span><br><span class="line"></span><br><span class="line">&amp;#x20;                   rgb = PDFProcessor.\_int\_to\_rgb(span\[&quot;color&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   run.font.color.rgb = rgb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 根据字体大小判断是否为标题</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               first\_span\_size = line\[&quot;spans&quot;]\[0]\[&quot;size&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if first\_span\_size &gt;= title\_threshold:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   paragraph.style = doc.styles\[&quot;Heading 2&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   paragraph.style = doc.styles\[&quot;Normal&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   @staticmethod</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def \_add\_image\_to\_doc(doc, img\_data):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;将图片添加到Word文档&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if os.path.exists(img\_data\[&quot;path&quot;]):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 计算图片在Word中的尺寸（英寸）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 72像素 = 1英寸</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               width\_in\_inches = img\_data\[&quot;width&quot;] / 72</span><br><span class="line"></span><br><span class="line">&amp;#x20;               height\_in\_inches = img\_data\[&quot;height&quot;] / 72</span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 限制最大宽度为6英寸，保持比例</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if width\_in\_inches &gt; 6:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   ratio = 6 / width\_in\_inches</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   width\_in\_inches = 6</span><br><span class="line"></span><br><span class="line">&amp;#x20;                   height\_in\_inches \*= ratio</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 添加图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               paragraph = doc.add\_paragraph()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               run = paragraph.add\_run()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               run.add\_picture(img\_data\[&quot;path&quot;], width=Inches(width\_in\_inches),&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                              height=Inches(height\_in\_inches))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               paragraph.alignment = WD\_ALIGN\_PARAGRAPH.CENTER  # 图片居中对齐</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       except Exception as e:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           print(f&quot;添加图片到文档失败: &#123;e&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   @staticmethod</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def \_int\_to\_rgb(color\_int: int) -&gt; Tuple\[int, int, int]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;将整数颜色值转换为RGB tuple&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       blue = color\_int &amp; 0xff</span><br><span class="line"></span><br><span class="line">&amp;#x20;       green = (color\_int &gt;&gt; 8) &amp; 0xff</span><br><span class="line"></span><br><span class="line">&amp;#x20;       red = (color\_int &gt;&gt; 16) &amp; 0xff</span><br><span class="line"></span><br><span class="line">&amp;#x20;       return (red, green, blue)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ProcessingThread(QThread):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;处理PDF文件的工作线程&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   finished = pyqtSignal(bool, str, str)  # 处理完成信号 (成功, 原文件路径, 结果文件路径)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   progress\_updated = pyqtSignal(str)  # 进度更新信号</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def \_\_init\_\_(self, pdf\_path: str, output\_path: str):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       super().\_\_init\_\_()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.pdf\_path = pdf\_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.output\_path = output\_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def run(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.progress\_updated.emit(f&quot;正在提取PDF内容: &#123;os.path.basename(self.pdf\_path)&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 提取PDF信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           pdf\_info = PDFProcessor.extract\_full\_pdf\_info(self.pdf\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.progress\_updated.emit(f&quot;正在去除水印: &#123;os.path.basename(self.pdf\_path)&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 去除水印</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           clean\_info = PDFProcessor.remove\_watermark\_by\_alpha(pdf\_info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.progress\_updated.emit(f&quot;正在生成Word文档: &#123;os.path.basename(self.output\_path)&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 生成Word文档</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           PDFProcessor.generate\_word\_from\_data(clean\_info, self.output\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.finished.emit(True, self.pdf\_path, self.output\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       except Exception as e:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           error\_msg = f&quot;处理失败: &#123;str(e)&#125;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;           print(error\_msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.progress\_updated.emit(error\_msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.finished.emit(False, self.pdf\_path, str(e))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class PdfWatermarkRemoverApp(QWidget):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;PDF水印去除工具主界面&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   def \_\_init\_\_(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       super().\_\_init\_\_()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processing\_queue = \[]  # 待处理文件队列</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processed\_count = 0  # 已处理文件数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.total\_files\_to\_process = 0  # 总文件数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.success\_count = 0  # 处理成功数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.failure\_count = 0  # 处理失败数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.failed\_files = \[]  # 处理失败的文件列表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processing\_mode = None  # &#x27;file&#x27; 或 &#x27;folder&#x27;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_all = None  # None:未设置, True:全部覆盖, False:全部跳过</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.init\_ui()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def init\_ui(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;初始化用户界面&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.setWindowTitle(&quot;PDF水印去除工具&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.setFixedSize(750, 400)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 设置中文字体</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       font = QFont()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       font.setFamily(&quot;SimHei&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout = QVBoxLayout()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.setSpacing(15)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.setContentsMargins(20, 20, 20, 20)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 标题</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       title\_label = QLabel(&quot;PDF水印去除与Word转换工具&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       title\_font = QFont()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       title\_font.setFamily(&quot;SimHei&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       title\_font.setPointSize(14)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       title\_font.setBold(True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       title\_label.setFont(title\_font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       title\_label.setAlignment(Qt.AlignCenter)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.addWidget(title\_label)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 分隔线</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       line = QFrame()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       line.setFrameShape(QFrame.HLine)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       line.setFrameShadow(QFrame.Sunken)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.addWidget(line)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 文件选择区域</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       file\_selection\_layout = QVBoxLayout()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 选择文件按钮</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_files\_button = QPushButton(&quot;选择文件...&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_files\_button.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_files\_button.clicked.connect(self.browse\_pdf\_files)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       file\_selection\_layout.addWidget(self.browse\_files\_button)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 选择文件夹按钮</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_folder\_button = QPushButton(&quot;选择文件夹...&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_folder\_button.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_folder\_button.clicked.connect(self.browse\_folder)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       file\_selection\_layout.addWidget(self.browse\_folder\_button)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 选中的文件/文件夹显示</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.selected\_path\_label = QLabel(&quot;未选择任何文件或文件夹&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.selected\_path\_label.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.selected\_path\_label.setWordWrap(True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       file\_selection\_layout.addWidget(self.selected\_path\_label)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.addLayout(file\_selection\_layout)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 处理按钮</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.process\_button = QPushButton(&quot;开始处理&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.process\_button.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.process\_button.setMinimumHeight(40)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.process\_button.clicked.connect(self.start\_processing)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.process\_button.setEnabled(False)  # 初始禁用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.addWidget(self.process\_button)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 进度显示区域</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       progress\_layout = QVBoxLayout()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.status\_label = QLabel(&quot;等待选择文件/文件夹...&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.status\_label.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       progress\_layout.addWidget(self.status\_label)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.current\_file\_status\_label = QLabel(&quot;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.current\_file\_status\_label.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.current\_file\_status\_label.setWordWrap(True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       progress\_layout.addWidget(self.current\_file\_status\_label)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.progress\_bar = QProgressBar()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.progress\_bar.setValue(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       progress\_layout.addWidget(self.progress\_bar)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.addLayout(progress\_layout)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 覆盖选项（默认隐藏）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_layout = QHBoxLayout()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_label = QLabel(&quot;文件已存在，是否覆盖？&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_label.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_layout.addWidget(self.overwrite\_label)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_button = QPushButton(&quot;覆盖&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_button.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_button.clicked.connect(lambda: self.handle\_overwrite\_choice(True))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_layout.addWidget(self.overwrite\_button)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.skip\_button = QPushButton(&quot;跳过&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.skip\_button.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.skip\_button.clicked.connect(lambda: self.handle\_overwrite\_choice(False))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_layout.addWidget(self.skip\_button)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_all\_checkbox = QCheckBox(&quot;对当前批次的所有冲突文件执行此操作&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_all\_checkbox.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_all\_checkbox.setVisible(False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_layout.addWidget(self.overwrite\_all\_checkbox)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.addLayout(self.overwrite\_layout)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_layout.setVisible(False)  # 默认隐藏</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 状态统计区域</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.stats\_label = QLabel(&quot;处理统计: 0 成功, 0 失败&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.stats\_label.setFont(font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.addWidget(self.stats\_label)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 底部说明</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       note\_label = QLabel(&quot;说明: 处理后的文件将保存至源文件所在目录的 &#x27;\_无水印&#x27; 子文件夹中&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       note\_font = QFont()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       note\_font.setFamily(&quot;SimHei&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       note\_font.setPointSize(9)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       note\_label.setFont(note\_font)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       note\_label.setAlignment(Qt.AlignRight)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       main\_layout.addWidget(note\_label)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.setLayout(main\_layout)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def browse\_pdf\_files(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;浏览并选择PDF文件&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       file\_paths, \_ = QFileDialog.getOpenFileNames(self, &quot;选择PDF文件&quot;, &quot;&quot;, &quot;PDF文件 (\*.pdf)&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if file\_paths:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.processing\_mode = &quot;file&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.processing\_queue = list(file\_paths)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.total\_files\_to\_process = len(self.processing\_queue)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.selected\_path\_label.setText(f&quot;已选择 &#123;self.total\_files\_to\_process&#125; 个PDF文件&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.process\_button.setEnabled(True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.reset\_processing\_stats()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def browse\_folder(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;浏览并选择文件夹&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       folder\_path = QFileDialog.getExistingDirectory(self, &quot;选择包含 PDF 文件的文件夹&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if folder\_path:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.processing\_mode = &quot;folder&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 查找文件夹中的所有PDF文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           pdf\_files = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for root, \_, files in os.walk(folder\_path):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for file in files:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   if file.lower().endswith(&#x27;.pdf&#x27;):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       pdf\_files.append(os.path.join(root, file))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;          &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.processing\_queue = pdf\_files</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.total\_files\_to\_process = len(self.processing\_queue)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.selected\_path\_label.setText(</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               f&quot;已选择文件夹: &#123;folder\_path&#125;\n包含 &#123;self.total\_files\_to\_process&#125; 个PDF文件&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.process\_button.setEnabled(self.total\_files\_to\_process &gt; 0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.reset\_processing\_stats()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def reset\_processing\_stats(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;重置处理统计信息&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processed\_count = 0</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.success\_count = 0</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.failure\_count = 0</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.failed\_files = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.progress\_bar.setValue(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.stats\_label.setText(&quot;处理统计: 0 成功, 0 失败&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.status\_label.setText(&quot;就绪，点击开始处理&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.current\_file\_status\_label.setText(&quot;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_all = None</span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def start\_processing(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;开始处理文件队列&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       if not self.processing\_queue or self.total\_files\_to\_process == 0:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           QMessageBox.information(self, &quot;提示&quot;, &quot;没有可处理的文件&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           return</span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.process\_button.setEnabled(False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_files\_button.setEnabled(False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_folder\_button.setEnabled(False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.process\_next\_file()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def process\_next\_file(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;处理队列中的下一个文件&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       if not self.processing\_queue:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.on\_all\_processing\_finished()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           return</span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       current\_pdf\_path = self.processing\_queue.pop(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       pdf\_filename = os.path.basename(current\_pdf\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       pdf\_dir = os.path.dirname(current\_pdf\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 创建输出目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       output\_dir = os.path.join(pdf\_dir, pdf\_filename.replace(&#x27;.pdf&#x27;, &#x27;&#x27;) + &quot;\_无水印&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       os.makedirs(output\_dir, exist\_ok=True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 构建输出文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       output\_filename = os.path.splitext(pdf\_filename)\[0] + &quot;\_无水印.docx&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       output\_word\_path = os.path.join(output\_dir, output\_filename)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 检查文件是否已存在</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if os.path.exists(output\_word\_path):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 如果已设置全局覆盖策略，则直接应用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if self.overwrite\_all is not None:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if not self.overwrite\_all:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 跳过此文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   self.current\_file\_status\_label.setText(f&quot;已跳过已存在文件: &#123;pdf\_filename&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   self.processed\_count += 1</span><br><span class="line"></span><br><span class="line">&amp;#x20;                   self.update\_progress()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   QApplication.processEvents()  # 更新界面</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   self.process\_next\_file()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   return</span><br><span class="line"></span><br><span class="line">&amp;#x20;           else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 显示覆盖选择对话框</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               self.current\_file\_path = current\_pdf\_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               self.current\_output\_path = output\_word\_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               self.status\_label.setText(f&quot;文件已存在: &#123;pdf\_filename&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               self.current\_file\_status\_label.setText(&quot;请选择处理方式&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               self.overwrite\_layout.setVisible(True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               self.overwrite\_all\_checkbox.setVisible(True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               return</span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 启动处理线程</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.status\_label.setText(f&quot;正在处理第 &#123;self.processed\_count + 1&#125; / &#123;self.total\_files\_to\_process&#125; 个文件...&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.current\_file\_status\_label.setText(f&quot;正在处理: &#123;pdf\_filename&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processing\_thread = ProcessingThread(current\_pdf\_path, output\_word\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processing\_thread.finished.connect(self.on\_file\_processed)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processing\_thread.progress\_updated.connect(self.current\_file\_status\_label.setText)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processing\_thread.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def handle\_overwrite\_choice(self, overwrite: bool):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;处理文件覆盖选择&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_layout.setVisible(False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 检查是否需要应用到所有文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if self.overwrite\_all\_checkbox.isChecked():</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.overwrite\_all = overwrite</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if overwrite:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 继续处理当前文件，覆盖已存在文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.processing\_thread = ProcessingThread(self.current\_file\_path, self.current\_output\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.processing\_thread.finished.connect(self.on\_file\_processed)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.processing\_thread.progress\_updated.connect(self.current\_file\_status\_label.setText)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.processing\_thread.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 跳过当前文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.current\_file\_status\_label.setText(f&quot;已跳过已存在文件: &#123;os.path.basename(self.current\_file\_path)&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.processed\_count += 1</span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.update\_progress()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.process\_next\_file()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def on\_file\_processed(self, success: bool, file\_path: str, result: str):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;文件处理完成回调&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       filename = os.path.basename(file\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if success:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.success\_count += 1</span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.current\_file\_status\_label.setText(f&quot;处理成功: &#123;filename&#125; -&gt; &#123;os.path.basename(result)&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.failure\_count += 1</span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.failed\_files.append(f&quot;&#123;filename&#125;: &#123;result&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           self.current\_file\_status\_label.setText(f&quot;处理失败: &#123;filename&#125; - &#123;result&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.processed\_count += 1</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.update\_progress()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.process\_next\_file()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def update\_progress(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;更新进度显示&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       progress\_percentage = int((self.processed\_count / self.total\_files\_to\_process) \* 100)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.progress\_bar.setValue(progress\_percentage)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.stats\_label.setText(f&quot;处理统计: &#123;self.success\_count&#125; 成功, &#123;self.failure\_count&#125; 失败&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   def on\_all\_processing\_finished(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;&quot;&quot;所有文件处理完成&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.status\_label.setText(&quot;所有文件处理完成!&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.current\_file\_status\_label.setText(&quot;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 显示处理结果摘要</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       result\_msg = f&quot;处理完成！共处理 &#123;self.total\_files\_to\_process&#125; 个文件\n&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       result\_msg += f&quot;成功: &#123;self.success\_count&#125; 个\n&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;       result\_msg += f&quot;失败: &#123;self.failure\_count&#125; 个&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if self.failed\_files:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           result\_msg += &quot;\n\n处理失败的文件：\n&quot; + &quot;\n&quot;.join(self.failed\_files)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       QMessageBox.information(self, &quot;处理完成&quot;, result\_msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 重置界面状态</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.process\_button.setEnabled(True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_files\_button.setEnabled(True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.browse\_folder\_button.setEnabled(True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_all = None</span><br><span class="line"></span><br><span class="line">&amp;#x20;       self.overwrite\_all\_checkbox.setChecked(False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if \_\_name\_\_ == &quot;\_\_main\_\_&quot;:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 确保中文正常显示</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   import matplotlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   matplotlib.rcParams\[&quot;font.family&quot;] = \[&quot;SimHei&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Heiti TC&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   app = QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   window = PdfWatermarkRemoverApp()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   window.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   sys.exit(app.exec\_())</span><br></pre></td></tr></table></figure></div><p>以上代码实现了一个功能完整的 PDF 水印去除工具，包含了从 PDF 内容提取、水印识别与去除到 Word 文档生成的全流程。工具支持单个文件处理和文件夹批量处理，提供了友好的图形界面和详细的处理状态反馈。你可以直接使用这段代码，也可以根据实际需求进行进一步的定制和优化。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《水印处理的成长日记：从0开始的PDF处理之路》&lt;/p&gt;
&lt;p&gt;在日常办公和学习中，我们经常会遇到带有水印的 PDF 文档，这些水印不仅影响阅读体验，还可能干扰文档的二次编辑和使用。本文将带你从零开始，一步步构建一个功能完善的 PDF 水印去除工具，实现从单文件处理到批量转</summary>
      
    
    
    
    <category term="-Python -PDF -Word" scheme="http://example.com/categories/Python-PDF-Word/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="PyMuPDF" scheme="http://example.com/tags/PyMuPDF/"/>
    
    <category term="水印去除" scheme="http://example.com/tags/%E6%B0%B4%E5%8D%B0%E5%8E%BB%E9%99%A4/"/>
    
    <category term="PDF处理" scheme="http://example.com/tags/PDF%E5%A4%84%E7%90%86/"/>
    
    <category term="PyQt5" scheme="http://example.com/tags/PyQt5/"/>
    
    <category term="Word" scheme="http://example.com/tags/Word/"/>
    
  </entry>
  
  <entry>
    <title>揭秘xlsxwriter：富文本格式如何精准“染色”？</title>
    <link href="http://example.com/2025/07/16/xlsxwriter%EF%BC%9A%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F%E5%A6%82%E4%BD%95%E7%B2%BE%E5%87%86%E2%80%9C%E6%9F%93%E8%89%B2%E2%80%9D%EF%BC%9F/"/>
    <id>http://example.com/2025/07/16/xlsxwriter%EF%BC%9A%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F%E5%A6%82%E4%BD%95%E7%B2%BE%E5%87%86%E2%80%9C%E6%9F%93%E8%89%B2%E2%80%9D%EF%BC%9F/</id>
    <published>2025-07-16T02:48:10.000Z</published>
    <updated>2025-07-17T01:06:24.425Z</updated>
    
    <content type="html"><![CDATA[<p>核心概念</p><p>xlsxwriter 通过<strong>单元格格式</strong>和<strong>文本位置索引</strong>来精确控制文本区间样式，其判定逻辑基于以下关键内容：</p><h3 id="1-文本区间定义方式-xA"><a href="#1-文本区间定义方式-xA" class="headerlink" title="1. 文本区间定义方式&#xA;"></a>1. 文本区间定义方式&#xA;</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\# 基本语法（非真实代码，仅示意逻辑）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">worksheet.write\_rich\_string(</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   row, col,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \[format1, &quot;红色文本&quot;, format2, &quot;普通文本&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><ul><li><p><strong>位置判定</strong>：根据字符串在参数列表中的顺序确定位置</p></li><li><p><strong>格式继承</strong>：格式对象作用于紧随其后的文本段</p></li></ul><h3 id="2-关键判定规则-xA"><a href="#2-关键判定规则-xA" class="headerlink" title="2. 关键判定规则&#xA;"></a>2. 关键判定规则&#xA;</h3><table><thead><tr><th>判定维度&#xA;</th><th>说明&#xA;</th></tr></thead><tbody><tr><td>格式对象位置&#xA;</td><td>格式总是应用于下一个字符串元素&#xA;</td></tr><tr><td>文本分段&#xA;</td><td>每个字符串元素被视为独立文本段&#xA;</td></tr><tr><td>空格式处理&#xA;</td><td>None 或省略格式时继承单元格默认格式&#xA;</td></tr><tr><td>特殊字符&#xA;</td><td>换行符 (\n) 会创建新文本段但不中断格式应用&#xA;</td></tr></tbody></table><h3 id="3-实际应用示例-xA"><a href="#3-实际应用示例-xA" class="headerlink" title="3. 实际应用示例&#xA;"></a>3. 实际应用示例&#xA;</h3><h4 id="案例-1：基础红黑文本-xA"><a href="#案例-1：基础红黑文本-xA" class="headerlink" title="案例 1：基础红黑文本&#xA;"></a>案例 1：基础红黑文本&#xA;</h4><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">red = workbook.add\_format(&#123;&#x27;color&#x27;: &#x27;red&#x27;&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">black = workbook.add\_format(&#123;&#x27;color&#x27;: &#x27;black&#x27;&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# &quot;答案&quot;红色，&quot;:&quot;黑色，&quot;42&quot;红色</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">worksheet.write\_rich\_string(&#x27;A1&#x27;,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   red, &#x27;答案&#x27;,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   black, &#x27;:&#x27;,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   red, &#x27;42&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><p>内存中的区间映射：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\[0-2): 红色格式 (对应&quot;答案&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\[2-3): 黑色格式 (对应&quot;:&quot;)&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\[3-5): 红色格式 (对应&quot;42&quot;)</span><br></pre></td></tr></table></figure></div><h4 id="案例-2：带格式继承的文本-xA"><a href="#案例-2：带格式继承的文本-xA" class="headerlink" title="案例 2：带格式继承的文本&#xA;"></a>案例 2：带格式继承的文本&#xA;</h4><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bold = workbook.add\_format(&#123;&#x27;bold&#x27;: True&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">default = workbook.add\_format()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# &quot;注意&quot;加粗，后续文本默认格式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">worksheet.write\_rich\_string(&#x27;A2&#x27;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   bold, &#x27;注意&#x27;,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   None, &#x27;：请检查数据&#x27;  # None继承单元格默认格式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><h3 id="4-特殊场景处理-xA"><a href="#4-特殊场景处理-xA" class="headerlink" title="4. 特殊场景处理&#xA;"></a>4. 特殊场景处理&#xA;</h3><h4 id="混合格式文本-xA"><a href="#混合格式文本-xA" class="headerlink" title="混合格式文本&#xA;"></a>混合格式文本&#xA;</h4><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">\# 同一单词中部分字母标红</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">worksheet.write\_rich\_string(&#x27;A3&#x27;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   black, &#x27;Pri&#x27;,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   red, &#x27;mar&#x27;,&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   black, &#x27;y&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><p>效果：显示为 “Primary” 其中 “mar” 为红色</p><h4 id="动态文本构建-xA"><a href="#动态文本构建-xA" class="headerlink" title="动态文本构建&#xA;"></a>动态文本构建&#xA;</h4><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">parts = \[black, &quot;随机值：&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if highlight:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   parts.extend(\[red, str(value)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   parts.extend(\[black, str(value)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">worksheet.write\_rich\_string(&#x27;A4&#x27;, \*parts)</span><br></pre></td></tr></table></figure></div><h3 id="5-底层实现原理-xA"><a href="#5-底层实现原理-xA" class="headerlink" title="5. 底层实现原理&#xA;"></a>5. 底层实现原理&#xA;</h3><ul><li><strong>OpenXML 映射</strong>：最终生成类似以下 XML 结构</li></ul><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">\&lt;r&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20; \&lt;rPr&gt;\&lt;color rgb=&quot;FFFF0000&quot;/&gt;\&lt;/rPr&gt;</span><br><span class="line"></span><br><span class="line">&amp;#x20; \&lt;t&gt;答案\&lt;/t&gt;</span><br><span class="line"></span><br><span class="line">\&lt;/r&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\&lt;r&gt;</span><br><span class="line"></span><br><span class="line">&amp;#x20; \&lt;rPr&gt;\&lt;color rgb=&quot;FF000000&quot;/&gt;\&lt;/rPr&gt;</span><br><span class="line"></span><br><span class="line">&amp;#x20; \&lt;t&gt;:\&lt;/t&gt;</span><br><span class="line"></span><br><span class="line">\&lt;/r&gt;</span><br></pre></td></tr></table></figure></div><ul><li><strong>索引计算</strong>：库内部维护格式栈，根据参数顺序计算每个文本段的起止位置</li></ul><h3 id="6-使用限制与注意事项-xA"><a href="#6-使用限制与注意事项-xA" class="headerlink" title="6. 使用限制与注意事项&#xA;"></a>6. 使用限制与注意事项&#xA;</h3><ul><li><p><strong>不可变特性</strong>：一旦写入无法修改单个文本段格式</p></li><li><p><strong>性能影响</strong>：每个格式变化都会创建新的<code>&lt;r&gt;</code>元素，过多分段影响文件大小</p></li><li><p><strong>边界情况</strong>：</p><ul><li><p>空字符串仍会占用格式区间</p></li><li><p>连续的相同格式不会自动合并</p></li></ul></li></ul><h3 id="7-调试技巧-xA"><a href="#7-调试技巧-xA" class="headerlink" title="7. 调试技巧&#xA;"></a>7. 调试技巧&#xA;</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\# 查看实际生成的XML（需要保存文件后解压查看）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">workbook.filename = &#x27;output.xlsx&#x27;</span><br><span class="line"></span><br><span class="line">workbook.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 解压后查看xl/worksheets/sheet1.xml</span><br></pre></td></tr></table></figure></div><h3 id="最佳实践建议-xA"><a href="#最佳实践建议-xA" class="headerlink" title="最佳实践建议&#xA;"></a>最佳实践建议&#xA;</h3><ul><li><p>批量合并相同格式的文本段</p></li><li><p>对静态内容预先生成格式列表</p></li><li><p>避免单个单元格内超过 20 个格式分段</p></li><li><p>对动态内容使用辅助函数构建参数列表</p></li></ul><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def build\_rich\_text(text\_parts):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   result = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for text, fmt in text\_parts:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       result.extend(\[fmt, text])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   return result</span><br></pre></td></tr></table></figure></div><p><strong>注</strong>：与 openpyxl 的 CellRichText 不同，xlsxwriter 采用更底层的格式绑定机制，对文本区间的判定完全基于参数序列顺序，不依赖任何文本标记符号。</p><h3 id="关键要点总结-xA"><a href="#关键要点总结-xA" class="headerlink" title="关键要点总结&#xA;"></a>关键要点总结&#xA;</h3><ol><li><p>xlsxwriter 的文本区间判定是<strong>顺序敏感</strong>的</p></li><li><p>格式对象总是<strong>向前绑定</strong>到下一个文本元素</p></li><li><p>实际渲染时会将文本区间映射为 OpenXML 的<code>&lt;r&gt;</code>元素</p></li><li><p>处理富文本时需要特别注意参数列表的构建顺序</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;核心概念&lt;/p&gt;
&lt;p&gt;xlsxwriter 通过&lt;strong&gt;单元格格式&lt;/strong&gt;和&lt;strong&gt;文本位置索引&lt;/strong&gt;来精确控制文本区间样式，其判定逻辑基于以下关键内容：&lt;/p&gt;
&lt;h3 id=&quot;1-文本区间定义方式-xA&quot;&gt;&lt;a href=&quot;#1-</summary>
      
    
    
    
    <category term="Python库应用" scheme="http://example.com/categories/Python%E5%BA%93%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="Excel" scheme="http://example.com/tags/Excel/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="xlsxwriter" scheme="http://example.com/tags/xlsxwriter/"/>
    
    <category term="格式化" scheme="http://example.com/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>docker离线部署：穿越网络屏障的容器编排利器</title>
    <link href="http://example.com/2025/07/16/docker%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2%EF%BC%9A%E7%A9%BF%E8%B6%8A%E7%BD%91%E7%BB%9C%E5%B1%8F%E9%9A%9C%E7%9A%84%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%88%A9%E5%99%A8/"/>
    <id>http://example.com/2025/07/16/docker%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2%EF%BC%9A%E7%A9%BF%E8%B6%8A%E7%BD%91%E7%BB%9C%E5%B1%8F%E9%9A%9C%E7%9A%84%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E5%88%A9%E5%99%A8/</id>
    <published>2025-07-16T01:52:06.000Z</published>
    <updated>2025-07-16T03:01:36.967Z</updated>
    
    <content type="html"><![CDATA[<p>一、Docker Compose 离线安装步骤</p><p>在 GitHub 上找到对应的 docker-compose 网站，下载适合当前系统的离线安装包（如 docker-compose-linux-x86_64），并将其放置在 &#x2F;tmp 目录下。</p><h3 id="赋予执行权限并移动至系统路径-xA"><a href="#赋予执行权限并移动至系统路径-xA" class="headerlink" title="赋予执行权限并移动至系统路径&#xA;"></a>赋予执行权限并移动至系统路径&#xA;</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">\# 赋予可执行权限</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod +x /tmp/docker-compose-linux-x86\_64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 移动到系统可执行目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo mv /tmp/docker-compose-linux-x86\_64 /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></div><h3 id="验证安装结果-xA"><a href="#验证安装结果-xA" class="headerlink" title="验证安装结果&#xA;"></a>验证安装结果&#xA;</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 输出示例：docker-compose version 2.20.3, build a8266d3</span><br></pre></td></tr></table></figure></div><p>二、常见问题与解决方法</p><h3 id="权限不足问题-xA"><a href="#权限不足问题-xA" class="headerlink" title="权限不足问题&#xA;"></a>权限不足问题&#xA;</h3><h4 id="问题-xA"><a href="#问题-xA" class="headerlink" title="问题&#xA;"></a>问题&#xA;</h4><p>执行 mv 时提示权限错误。</p><h4 id="解决-xA"><a href="#解决-xA" class="headerlink" title="解决&#xA;"></a>解决&#xA;</h4><p>使用 sudo 命令获取管理员权限：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /tmp/docker-compose-linux-x86\_64 /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></div><h3 id="命令不存在问题-xA"><a href="#命令不存在问题-xA" class="headerlink" title="命令不存在问题&#xA;"></a>命令不存在问题&#xA;</h3><h4 id="问题-xA-1"><a href="#问题-xA-1" class="headerlink" title="问题&#xA;"></a>问题&#xA;</h4><p>输入 docker-compose 提示命令未找到。</p><h4 id="解决-xA-1"><a href="#解决-xA-1" class="headerlink" title="解决&#xA;"></a>解决&#xA;</h4><p>检查系统路径是否包含 &#x2F;usr&#x2F;local&#x2F;bin：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo \$PATH  # 若不含 /usr/local/bin，添加至环境变量</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export PATH=\$PATH:/usr/local/bin</span><br></pre></td></tr></table></figure></div><h3 id="文件名空格问题-xA"><a href="#文件名空格问题-xA" class="headerlink" title="文件名空格问题&#xA;"></a>文件名空格问题&#xA;</h3><h4 id="问题-xA-2"><a href="#问题-xA-2" class="headerlink" title="问题&#xA;"></a>问题&#xA;</h4><p>脚本文件名含前导空格导致命令失败。</p><h4 id="解决-xA-2"><a href="#解决-xA-2" class="headerlink" title="解决&#xA;"></a>解决&#xA;</h4><p>重命名文件去除空格：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv &#x27; replace\_image\_registry.sh&#x27; replace\_image\_registry.sh</span><br></pre></td></tr></table></figure></div><p>三、核心命令总结</p><h3 id="安装核心步骤-xA"><a href="#安装核心步骤-xA" class="headerlink" title="安装核心步骤&#xA;"></a>安装核心步骤&#xA;</h3><p>下载 → 赋权 → 移动 → 验证</p><h3 id="关键命令-xA"><a href="#关键命令-xA" class="headerlink" title="关键命令&#xA;"></a>关键命令&#xA;</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /tmp/docker-compose-linux-x86\_64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo mv /tmp/docker-compose-linux-x86\_64 /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、Docker Compose 离线安装步骤&lt;/p&gt;
&lt;p&gt;在 GitHub 上找到对应的 docker-compose 网站，下载适合当前系统的离线安装包（如 docker-compose-linux-x86_64），并将其放置在 &amp;#x2F;tmp 目录下。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="容器技术" scheme="http://example.com/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"/>
    
    <category term="部署实践" scheme="http://example.com/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/%E9%83%A8%E7%BD%B2%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="Docker Compose" scheme="http://example.com/tags/Docker-Compose/"/>
    
    <category term="离线安装" scheme="http://example.com/tags/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/"/>
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Portainer容器管理实战：从镜像加速到安全部署</title>
    <link href="http://example.com/2025/07/15/Portainer%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%EF%BC%9A%E4%BB%8E%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E5%88%B0%E5%AE%89%E5%85%A8%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/2025/07/15/Portainer%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%EF%BC%9A%E4%BB%8E%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E5%88%B0%E5%AE%89%E5%85%A8%E9%83%A8%E7%BD%B2/</id>
    <published>2025-07-15T09:50:31.000Z</published>
    <updated>2025-07-15T09:56:57.921Z</updated>
    
    <content type="html"><![CDATA[<p>一、背景：为什么选择从第三方镜像源拉取 Portainer？</p><p>近期在学习容器管理工具 Portainer 时，参考了一篇技术教程（知乎链接：<a class="link"   href="https://zhuanlan.zhihu.com/p/27740131259" >https://zhuanlan.zhi<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a><a class="link"   href="https://zhuanlan.zhihu.com/p/27740131259" >hu<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a><a class="link"   href="https://zhuanlan.zhihu.com/p/27740131259" >.com&#x2F;<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a><a class="link"   href="https://zhuanlan.zhihu.com/p/27740131259" >p&#x2F;2<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a><a class="link"   href="https://zhuanlan.zhihu.com/p/27740131259" >7740<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a><a class="link"   href="https://zhuanlan.zhihu.com/p/27740131259" >1312<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a><a class="link"   href="https://zhuanlan.zhihu.com/p/27740131259" >59<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>），教程中推荐使用官方镜像源部署。但由于网络环境限制，尝试从第三方镜像源<code>docker.1ms.run</code>拉取 Portainer 镜像，意外发现该镜像源提供了更稳定的下载速度，因此记录下完整操作流程，供遇到类似问题的开发者参考。</p><p>二、操作步骤：从镜像拉取到容器启动的全流程</p><h3 id="1-拉取-Portainer-镜像-xA"><a href="#1-拉取-Portainer-镜像-xA" class="headerlink" title="1. 拉取 Portainer 镜像&#xA;"></a>1. 拉取 Portainer 镜像&#xA;</h3><p>通常情况下，Portainer 官方镜像的拉取命令为：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull portainer/portainer-ce:latest</span><br></pre></td></tr></table></figure></div><p>但本次尝试使用第三方镜像源：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull docker.1ms.run/portainer/portainer-ce:latest</span><br></pre></td></tr></table></figure></div><p>执行结果：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Using default tag: latest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">latest: Pulling from portainer/portainer-ce</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">63c930229559: Pull complete&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d3b1c06ebf8c: Pull complete&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...（中间层拉取省略）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Digest: sha256:224a378fbc5ae579dc9d570c5ca2e5e981a4a003c8d7c2c5b5e482af97c2f87c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Status: Downloaded newer image for docker.1ms.run/portainer/portainer-ce:latest</span><br></pre></td></tr></table></figure></div><p><strong>注意事项：</strong></p><ul><li><p>第三方镜像源可能存在安全风险，建议优先使用官方镜像（<code>portainer/portainer-ce</code>）。</p></li><li><p>若拉取失败，可检查镜像源是否可用（如执行<code>ping docker.1ms.run</code>），或切换至国内加速源（如 Docker 中国镜像站）。</p></li></ul><h3 id="2-验证镜像是否成功拉取-xA"><a href="#2-验证镜像是否成功拉取-xA" class="headerlink" title="2. 验证镜像是否成功拉取&#xA;"></a>2. 验证镜像是否成功拉取&#xA;</h3><p>通过<code>docker images</code>命令查看本地镜像列表：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY                              TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line"></span><br><span class="line">docker.1ms.run/portainer/portainer-ce   latest    71de3839351a   2 days ago    268MB</span><br></pre></td></tr></table></figure></div><h3 id="3-启动-Portainer-容器-xA"><a href="#3-启动-Portainer-容器-xA" class="headerlink" title="3. 启动 Portainer 容器&#xA;"></a>3. 启动 Portainer 容器&#xA;</h3><p>使用以下命令启动容器，并配置挂载与端口映射：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20; \--name portainer \\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20; -p 9000:9000 \\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20; -v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20; -v portainer\_data:/data \\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20; \--restart=always \\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20; docker.1ms.run/portainer/portainer-ce:latest</span><br></pre></td></tr></table></figure></div><p><strong>参数解析：</strong></p><ul><li><p><code>-d</code>：后台运行容器；</p></li><li><p><code>-p 9000:9000</code>：映射宿主机 9000 端口到容器 9000 端口，用于访问 Web 界面；</p></li><li><p><code>-v /var/run/docker.sock:/var/run/docker.sock</code>：挂载 Docker 套接字，允许 Portainer 管理宿主机 Docker 环境；</p></li><li><p><code>-v portainer_data:/data</code>：创建数据卷持久化存储 Portainer 配置；</p></li><li><p><code>--restart=always</code>：确保容器随系统重启自动运行。</p></li></ul><h3 id="4-访问-Portainer-Web-界面-xA"><a href="#4-访问-Portainer-Web-界面-xA" class="headerlink" title="4. 访问 Portainer Web 界面&#xA;"></a>4. 访问 Portainer Web 界面&#xA;</h3><p>容器启动后，在浏览器中输入<code>http://宿主机IP:9000</code>，首次访问需设置管理员密码，随后进入 Portainer 管理界面。</p><p>三、遇到的问题与解决方案</p><h3 id="1-镜像拉取失败：manifest-unknown-xA"><a href="#1-镜像拉取失败：manifest-unknown-xA" class="headerlink" title="1. 镜像拉取失败：manifest unknown&#xA;"></a>1. 镜像拉取失败：manifest unknown&#xA;</h3><p><strong>错误信息：</strong></p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error response from daemon: manifest for docker.1ms.run/portainer-ce:latest not found: manifest unknown</span><br></pre></td></tr></table></figure></div><p><strong>原因：</strong></p><p>镜像源中无该镜像，或镜像名称拼写错误（如<code>portainer-ce</code>写成<code>portainer</code>）。</p><p><strong>解决方法：</strong></p><p>确认镜像名称正确性，或更换为官方镜像源拉取：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull portainer/portainer-ce:latest</span><br></pre></td></tr></table></figure></div><h3 id="2-Docker-Hub-连接超时-xA"><a href="#2-Docker-Hub-连接超时-xA" class="headerlink" title="2. Docker Hub 连接超时&#xA;"></a>2. Docker Hub 连接超时&#xA;</h3><p><strong>错误信息：</strong></p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error response from daemon: Get &quot;https://registry-1.docker.io/v2/&quot;: context deadline exceeded</span><br></pre></td></tr></table></figure></div><p><strong>解决方法：</strong></p><p>配置国内镜像加速源，编辑<code>/etc/docker/daemon.json</code>添加：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20; &quot;registry-mirrors&quot;: \[&quot;https://registry.docker-cn.com&quot;, &quot;https://docker.mirrors.ustc.edu.cn&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>重启 Docker 服务：<code>sudo systemctl restart docker</code>。</p><p>四、使用第三方镜像源的风险与建议</p><ul><li><p><strong>安全风险</strong>：第三方镜像源可能被篡改，建议优先使用官方镜像（<code>portainer/portainer-ce</code>）。</p></li><li><p><strong>版本兼容性</strong>：第三方镜像可能非最新版本，建议定期通过<code>docker pull</code>更新镜像。</p></li><li><p><strong>网络稳定性</strong>：若第三方源频繁失效，优先使用官方源或国内大厂加速源（如阿里云、腾讯云镜像站）。</p></li></ul><p>五、总结：Portainer 的价值与容器管理实践</p><p>通过 Docker 部署 Portainer 后，可直观管理容器、镜像、网络及数据卷，尤其适合新手快速上手容器化部署。本次从第三方镜像源拉取的经历表明：技术实践中需在效率与安全性间权衡，建议在测试环境尝试非官方源，生产环境务必使用官方可信镜像。</p><p>后续可进一步探索 Portainer 的 Kubernetes 管理、RBAC 权限控制等高级功能，提升容器化应用的部署与运维效率。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、背景：为什么选择从第三方镜像源拉取 Portainer？&lt;/p&gt;
&lt;p&gt;近期在学习容器管理工具 Portainer 时，参考了一篇技术教程（知乎链接：&lt;a class=&quot;link&quot;   href=&quot;https://zhuanlan.zhihu.com/p/2774013</summary>
      
    
    
    
    <category term="Docker实践" scheme="http://example.com/categories/Docker%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
    <category term="Portainer" scheme="http://example.com/tags/Portainer/"/>
    
    <category term="镜像加速" scheme="http://example.com/tags/%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/"/>
    
    <category term="容器管理" scheme="http://example.com/tags/%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Python 魔法：一键让 Excel 正确选项「脸红」</title>
    <link href="http://example.com/2025/07/15/Python-%E9%AD%94%E6%B3%95%EF%BC%9A%E4%B8%80%E9%94%AE%E8%AE%A9-Excel-%E6%AD%A3%E7%A1%AE%E9%80%89%E9%A1%B9%E3%80%8C%E8%84%B8%E7%BA%A2%E3%80%8D/"/>
    <id>http://example.com/2025/07/15/Python-%E9%AD%94%E6%B3%95%EF%BC%9A%E4%B8%80%E9%94%AE%E8%AE%A9-Excel-%E6%AD%A3%E7%A1%AE%E9%80%89%E9%A1%B9%E3%80%8C%E8%84%B8%E7%BA%A2%E3%80%8D/</id>
    <published>2025-07-15T09:21:07.000Z</published>
    <updated>2025-07-16T01:50:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>在数据处理工作中，我们经常需要处理 Excel 文件中的试题数据，特别是需要对正确答案进行特殊标记。本文将分享我从最初实现到最终优化的完整改进过程。</p><p>初始需求</p><p>我们需要处理一个包含试题的 Excel 文件，具体要求：</p><ul><li><p>文件包含 “试题选项” 和 “试题答案” 两列</p></li><li><p>试题选项用 “$$;$“ 分隔多个选项</p></li><li><p>需要根据 “试题答案” 将正确答案标记为红色</p></li><li><p>处理后的结果直接修改原文件</p></li></ul><p>第一版实现</p><h3 id="核心思路：-xA"><a href="#核心思路：-xA" class="headerlink" title="核心思路：&#xA;"></a>核心思路：&#xA;</h3><ul><li><p>使用 pandas 读取 Excel 文件</p></li><li><p>用 openpyxl 修改原文件样式</p></li><li><p>在正确答案前后添加 “**“ 标记</p></li><li><p>提示用户手动替换 “**“ 为红色格式</p></li></ul><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">\# 主要处理逻辑</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">marked\_options = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i, option in enumerate(options):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if i in correct\_indices:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       marked\_options.append(f&quot;\*\*&#123;option&#125;\*\*&quot;)  # 用\*\*标记正确答案</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       marked\_options.append(option)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cell.value = &#x27;\$;\$&#x27;.join(marked\_options)</span><br></pre></td></tr></table></figure></div><p><strong>问题：</strong></p><p>不能自动设置红色，需要用户手动替换，** 的标记方式不够直观</p><p>第二版改进</p><h3 id="改进点：-xA"><a href="#改进点：-xA" class="headerlink" title="改进点：&#xA;"></a>改进点：&#xA;</h3><ul><li><p>改用 xlsxwriter 引擎</p></li><li><p>直接处理 ** 标记的内容并设置为红色</p></li><li><p>保留 ** 标记</p></li></ul><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">\# 使用正则匹配\*\*内容并设置格式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for match in re.finditer(r&#x27;\\\\\\\*\\\\\\\*(.\*?)\\\\\\\*\\\\\\\*&#x27;, cell\_value):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   parts.append(&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#x27;text&#x27;: f&quot;\*\*&#123;match.group(1)&#125;\*\*&quot;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#x27;format&#x27;: red\_format</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &#125;)</span><br></pre></td></tr></table></figure></div><p><strong>问题：</strong></p><p>使用 ** 将正确答案括起来的话，xlsxwriter 无法非常准确地解析出来，因为答案可能是 <strong>A</strong>$;$B$;$C$;$<strong>D</strong> 这样子的，相同的符号会干扰它的判断，从而导致效果不好</p><p>最终版改进</p><h3 id="改进思路：-xA"><a href="#改进思路：-xA" class="headerlink" title="改进思路：&#xA;"></a>改进思路：&#xA;</h3><ul><li><p>改回使用 openpyxl</p></li><li><p>正确答案用 [] 标记</p></li><li><p>非正确答案不做标记</p></li></ul><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">marked\_options = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i, option in enumerate(options):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if i in correct\_indices:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       marked\_options.append(f&quot;\[&#123;option&#125;]&quot;) # 正确答案标记</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       marked\_options.append(option)</span><br></pre></td></tr></table></figure></div><p>然后再进行标红处理：</p><ul><li><p>使用富文本 (CellRichText) 直接设置红色</p></li><li><p>自动移除 [] 标记</p></li><li><p>添加异常处理，失败时回退到普通文本</p></li><li><p>更友好的提示信息</p></li></ul><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">\# 富文本处理核心代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rich\_text = CellRichText()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i, option in enumerate(options):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if i &gt; 0:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       rich\_text.append(&#x27;\$;\$&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   clean\_option = option.replace(&#x27;\[&#x27;, &#x27;&#x27;).replace(&#x27;]&#x27;, &#x27;&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if i in correct\_indices:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       rich\_text.append(TextBlock(inline\_red\_font, clean\_option))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   else:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       rich\_text.append(clean\_option)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cell.value = rich\_text</span><br></pre></td></tr></table></figure></div><h3 id="关键改进点：-xA"><a href="#关键改进点：-xA" class="headerlink" title="关键改进点：&#xA;"></a>关键改进点：&#xA;</h3><ul><li><p><strong>富文本支持</strong>：使用 CellRichText 和 TextBlock 实现对单个字符的样式设置</p></li><li><p><strong>自动清理</strong>：移除选项中的 [] 标记</p></li></ul><p>拓展功能：标记检查与统一分隔符</p><p>在最终版的基础上，我进一步完善了代码，增加了两项重要的功能：统一处理非标准分隔符和全面的标记检查报告。这使得整个流程更加健壮和智能化。</p><h3 id="1-统一分隔符-xA"><a href="#1-统一分隔符-xA" class="headerlink" title="1. 统一分隔符&#xA;"></a>1. 统一分隔符&#xA;</h3><p>很多时候，Excel 中的选项分隔符可能不统一，除了标准的$;$，还可能出现$;、$$等，甚至单空格加 $ 等多种形式。为了确保选项能够被正确解析，我加入了强大的正则表达式来识别并统一这些非标准分隔符为 $;$。</p><p>实现方式：使用 re.compile 定义了一个详细的正则表达式 separator_pattern，涵盖了多种常见的非标准分隔符。</p><p>效果：在处理每个选项字符串时，首先使用 separator_pattern.sub (‘$;$’, options_str) 将所有识别到的非标准分隔符统一替换为 $;$ 。这大大提高了数据处理的鲁棒性，减少了因格式不一致导致的问题。</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">\# 正则表达式定义（部分）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">separator\_pattern = re.compile(r&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \$;\$|       # 标准 \$;\$ \[cite: 3]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \$:：\$|   # \$:\$ 或 \$：\$ \[cite: 4]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   ;\$|         # ;\$ \[cite: 5]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \$；|        # \$； \[cite: 6]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \[；:：]\$|   # ；\$ 或 ：\$ \[cite: 7]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   $\[;；:：]|  # \$; 或 \$；或 \$: 或 \$： \[cite: 8]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \$\$|        # \$\$ \[cite: 9]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \s&#123;2,&#125;|      # 两个或更多空格 \[cite: 10]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \$\s|\s\$|   # \$ 后或前有单个空格 \[cite: 11]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   ;           # 单独的分号 \[cite: 12]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;, re.VERBOSE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 在处理选项字符串时进行替换</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">modified\_str = separator\_pattern.sub(&#x27;\$;\$&#x27;, options\_str)</span><br></pre></td></tr></table></figure></div><h3 id="2-标记检查报告-xA"><a href="#2-标记检查报告-xA" class="headerlink" title="2. 标记检查报告&#xA;"></a>2. 标记检查报告&#xA;</h3><p>仅仅对正确答案进行标记是不够的，我们还需要验证标记是否正确、是否有遗漏。此功能可以生成详细的报告，指出 “正确答案未被标记” 和 “错误答案被标记” 的情况。</p><h4 id="核心逻辑优化：-xA"><a href="#核心逻辑优化：-xA" class="headerlink" title="核心逻辑优化：&#xA;"></a>核心逻辑优化：&#xA;</h4><ul><li><p><strong>未标记检查</strong>：传统的检查方法是看 “标记索引” 中是否包含正确答案的索引。但如果正确答案完全没有被标记（即选项中根本没有 []），这种方法就无法识别。新的逻辑直接检查正确答案的选项内容是否被 [] 包裹 。只要正确答案未被 [] 包裹，无论是否有其他标记动作，都会被识别为 “未标记” 。</p></li><li><p><strong>错误标记检查</strong>：检查所有被 [] 包裹的选项，如果其索引不在正确答案的索引列表中，则视为错误标记 。</p></li></ul><h4 id="输出报告：-xA"><a href="#输出报告：-xA" class="headerlink" title="输出报告：&#xA;"></a>输出报告：&#xA;</h4><p>生成清晰的报告，包含：</p><ul><li><p>检查的总行数 。</p></li><li><p>“未标记正确答案的行” 数量及具体详情（Excel 行号、应标记的字母、未被包裹的实际内容） 。</p></li><li><p>“错误标记的行” 数量及具体详情（Excel 行号、错误标记的内容、正确的答案） 。</p></li></ul><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">\# 未标记行检查的核心代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">has\_unmarked = False</span><br><span class="line"></span><br><span class="line">for i in correct\_indices:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   opt = options\[i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 直接检查正确答案是否被\[]包裹&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if not (opt.strip().startswith(&#x27;\[&#x27;) and opt.strip().endswith(&#x27;]&#x27;)):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       has\_unmarked = True</span><br><span class="line"></span><br><span class="line">&amp;#x20;       break</span><br><span class="line"></span><br><span class="line">if has\_unmarked: # \[cite: 16]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   unmarked\_rows.append(&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#x27;row&#x27;: row\_num,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#x27;expected&#x27;: \[chr(65 + i) for i in correct\_indices],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#x27;actual&#x27;: \[options\[i].strip() for i in correct\_indices]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 错误标记行检查的核心代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">marked\_indices = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i, opt in enumerate(options):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if opt.strip().startswith(&#x27;\[&#x27;) and opt.strip().endswith(&#x27;]&#x27;):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       marked\_indices.append(i)  # 记录被标记的索引</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i in marked\_indices: #&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if i not in correct\_indices:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       wrong\_marking.append(&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#x27;row&#x27;: row\_num,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#x27;wrong\_marked&#x27;: options\[i].strip(),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#x27;correct&#x27;: \[chr(65 + i) for i in correct\_indices] #&amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       break # 只要有一个错误标记就记录</span><br></pre></td></tr></table></figure></div><h4 id="验证示例：-xA"><a href="#验证示例：-xA" class="headerlink" title="验证示例：&#xA;"></a>验证示例：&#xA;</h4><p>如果一个 Excel 行的正确答案是 D，但选项 D 没有被 [] 包裹，运行代码后会输出：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\=== 标记检查报告 ===</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">共检查 1000 行数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1\. 未标记正确答案的行: 1 行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20; 行X: 应标记\[&#x27;D&#x27;]（内容：D、财务收支审批人员的奖惩办法）未被\[]包裹</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2\. 错误标记的行: 0 行</span><br></pre></td></tr></table></figure></div><p>这使得我们能够精准识别 “应该标记但完全没标记” 的情况 。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在数据处理工作中，我们经常需要处理 Excel 文件中的试题数据，特别是需要对正确答案进行特殊标记。本文将分享我从最初实现到最终优化的完整改进过程。&lt;/p&gt;
&lt;p&gt;初始需求&lt;/p&gt;
&lt;p&gt;我们需要处理一个包含试题的 Excel 文件，具体要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;</summary>
      
    
    
    
    <category term="Excel" scheme="http://example.com/categories/Excel/"/>
    
    <category term="Python" scheme="http://example.com/categories/Excel/Python/"/>
    
    <category term="数据处理" scheme="http://example.com/categories/Excel/Python/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="Excel" scheme="http://example.com/tags/Excel/"/>
    
    <category term="Pandas" scheme="http://example.com/tags/Pandas/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Openpyxl" scheme="http://example.com/tags/Openpyxl/"/>
    
    <category term="Xlsxwriter" scheme="http://example.com/tags/Xlsxwriter/"/>
    
    <category term="正则表达式" scheme="http://example.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python 魔法：一键让 Excel 正确选项「脸红」</title>
    <link href="http://example.com/2025/07/15/Python%E9%AD%94%E6%B3%95%EF%BC%9A%E5%A6%82%E4%BD%95%E7%94%A8%E7%89%B9%E5%BE%81%E8%AF%86%E5%88%AB%E8%AE%A9PDF%E6%B0%B4%E5%8D%B0%E9%9A%90%E5%BD%A2%EF%BC%9F/"/>
    <id>http://example.com/2025/07/15/Python%E9%AD%94%E6%B3%95%EF%BC%9A%E5%A6%82%E4%BD%95%E7%94%A8%E7%89%B9%E5%BE%81%E8%AF%86%E5%88%AB%E8%AE%A9PDF%E6%B0%B4%E5%8D%B0%E9%9A%90%E5%BD%A2%EF%BC%9F/</id>
    <published>2025-07-15T09:21:07.000Z</published>
    <updated>2025-07-16T01:50:49.691Z</updated>
    
    <content type="html"><![CDATA[<p>在日常工作中，我们经常会遇到带有特定特征的 PDF 水印，比如固定的字体大小、倾斜角度、透明度和颜色。这些特性为我们提供了更精准地识别水印的依据。今天，我们就来深入探讨如何利用 PyMuPDF (Fitz) 库，基于这些特征实现 PDF 水印的精确识别和去除，并整合多种实用方法，帮你应对不同场景。</p><p>特定特征水印的识别原理</p><p>PDF 文件中的文本和图形对象都包含了丰富的元数据信息，例如字体大小、旋转角度、透明度和颜色。当水印具有固定特征时，我们可以通过以下步骤实现精准识别：</p><ol><li><p><strong>解析 PDF 页面内容</strong>： 获取页面上所有的文本和图形对象。</p></li><li><p><strong>提取对象特征</strong>： 获取每个对象的字体大小、旋转角度、透明度和颜色等信息。</p></li><li><p><strong>特征匹配</strong>： 将提取到的特征与我们已知的水印特征进行比对。</p></li><li><p><strong>处理匹配对象</strong>： 对符合水印特征的对象进行删除或覆盖处理。</p></li></ol><p>典型的 PDF 水印通常具备以下特征：</p><ul><li><p>📐 固定倾斜角度 (常见 15-45 度)</p></li><li><p>🎨 固定颜色 (常见浅灰色 #C0C0C0)</p></li><li><p>🌫 固定透明度 (约 30-50%)</p></li><li><p>🔠 固定字体大小 (通常较大)</p></li><li><p>🔄 重复出现在每一页相同位置</p></li></ul><p>使用 PyMuPDF 实现基于特征的水印处理</p><h3 id="方法一：基于字体大小和旋转角度的水印识别-xA"><a href="#方法一：基于字体大小和旋转角度的水印识别-xA" class="headerlink" title="方法一：基于字体大小和旋转角度的水印识别&#xA;"></a>方法一：基于字体大小和旋转角度的水印识别&#xA;</h3><p>这个方法非常适合那些字体大小和倾斜角度都比较固定的水印。</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">import fitz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def remove\_watermark\_by\_font\_size\_and\_rotation(input\_pdf, output\_pdf, font\_size, rotation\_angle):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   根据字体大小和旋转角度去除PDF中的水印。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   参数:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   input\_pdf (str): 输入PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   output\_pdf (str): 输出PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   font\_size (float): 水印字体大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   rotation\_angle (float): 水印旋转角度 (度)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc = fitz.open(input\_pdf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for page in doc:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 获取页面上的所有文本和它们的属性</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       text\_infos = page.get\_text(&quot;dict&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for block in text\_infos\[&quot;blocks&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if &quot;lines&quot; in block:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for line in block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 提取字体大小和旋转角度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       current\_size = span\[&quot;size&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 计算旋转角度 (PyMuPDF中通过变换矩阵计算)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       matrix = fitz.Matrix(span\[&quot;matrix&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# matrix.decompose() 返回 (a, b, c, d, e, f)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 旋转角度通过 atan2(b, a) 或 atan2(-c, d) 计算。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 对于简单的旋转，alpha 和 beta 应该近似相等或互补。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 这里我们简化，直接使用 atan2(matrix.b, matrix.a) 转换成角度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       import math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       current\_rotation = math.degrees(math.atan2(matrix.b, matrix.a))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 检查是否匹配水印特征，并允许一定的误差</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       if (abs(current\_size - font\_size) &lt; 1.5 and # 允许轻微误差</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           abs(current\_rotation - rotation\_angle) &lt; 5.0): # 允许5度误差</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           \# 创建一个矩形区域用于覆盖水印</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           page.add\_redact\_annot(fitz.Rect(span\[&quot;bbox&quot;]), text=&quot;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 应用所有编辑</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       page.apply\_redactions()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 保存修改后的PDF</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.save(output\_pdf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.close()</span><br></pre></td></tr></table></figure></div><p><strong>代码解析</strong>：</p><ul><li><p>我们使用 <code>page.get_text(&quot;dict&quot;)</code> 获取页面上所有的文本信息，包括它们的各种属性。</p></li><li><p>从文本跨度 (span) 中提取 字体大小 和 变换矩阵。</p></li><li><p>通过分解变换矩阵来计算文本的 旋转角度。这里使用了 <code>math.atan2(matrix.b, matrix.a)</code> 来更准确地获取旋转角度。</p></li><li><p>将提取到的特征与你已知的水印特征进行比较，如果匹配（并允许一定的误差范围），就用一个空白矩形覆盖水印区域。</p></li></ul><p><strong>难易度</strong>：★★★☆☆</p><p><strong>优点</strong>： 对具有固定字体大小和倾斜角度的水印效果特别好，误判率低。</p><p><strong>缺点</strong>： 需要你预先知道水印的字体大小和旋转角度参数。</p><h3 id="方法二：基于透明度和颜色的水印识别-xA"><a href="#方法二：基于透明度和颜色的水印识别-xA" class="headerlink" title="方法二：基于透明度和颜色的水印识别&#xA;"></a>方法二：基于透明度和颜色的水印识别&#xA;</h3><p>这种方法适用于那些有固定透明度和颜色的水印，特别是半透明的浅色水印。</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">import fitz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def remove\_watermark\_by\_opacity\_and\_color(input\_pdf, output\_pdf, opacity\_threshold, color\_rgb\_target, color\_tolerance=10):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   根据透明度和颜色去除PDF中的水印。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   参数:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   input\_pdf (str): 输入PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   output\_pdf (str): 输出PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   opacity\_threshold (float): 水印透明度阈值 (0.0-1.0)，低于此值可能认为是水印</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   color\_rgb\_target (tuple): 水印颜色的RGB值，如 (200, 200, 200)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   color\_tolerance (int): 颜色匹配的容差范围 (0-255)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc = fitz.open(input\_pdf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for page in doc:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 获取页面上所有的绘图指令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# PyMuPDF 直接从get\_text(&quot;dict&quot;)获取的span里没有透明度信息，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 透明度通常是在图形状态(graphics state)中设置的，需要解析PDF内容流才能获取。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 这里为了演示，我们假设透明度信息可以通过更复杂的解析获得，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 或者通过图像渲染后分析像素来实现。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 简化处理：对于文本水印，通常颜色和位置是更可靠的特征。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 如果需要精确的透明度识别，需要更深入的PDF内容流解析。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 遍历页面上的所有文本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       text\_infos = page.get\_text(&quot;dict&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for block in text\_infos\[&quot;blocks&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if &quot;lines&quot; in block:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for line in block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 提取颜色信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       color\_int = span\[&quot;color&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       r = (color\_int &gt;&gt; 16) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;                       g = (color\_int &gt;&gt; 8) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;                       b = color\_int &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;                       current\_color\_rgb = (r, g, b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 在PyMuPDF的文本span信息中直接获取透明度是比较复杂的，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 因为透明度是图形状态的一部分，而不是文本本身的一个属性。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 对于真正的透明度匹配，通常需要渲染页面并分析像素的alpha通道，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 或者解析更底层的PDF内容流。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 为了演示，我们在这里简化，假设所有文本都是不透明的，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 除非通过其他方式确认其透明度。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 如果 watermark 是图像，则需要用其他方法处理。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 判断颜色是否匹配目标颜色（带容差）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       color\_match = (</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           abs(current\_color\_rgb\[0] - color\_rgb\_target\[0]) &lt;= color\_tolerance and</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           abs(current\_color\_rgb\[1] - color\_rgb\_target\[1]) &lt;= color\_tolerance and</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           abs(current\_color\_rgb\[2] - color\_rgb\_target\[2]) &lt;= color\_tolerance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 这里没有透明度信息，所以暂时不作为判断条件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 如果你的水印是文本且颜色固定，这个方法会很有用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       if color\_match: # 仅基于颜色匹配</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           page.add\_redact\_annot(fitz.Rect(span\[&quot;bbox&quot;]), text=&quot;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 应用所有编辑</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       page.apply\_redactions()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 保存修改后的PDF</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.save(output\_pdf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.close()</span><br></pre></td></tr></table></figure></div><p><strong>代码解析</strong>：</p><ul><li><p>我们从文本跨度中提取 RGB 颜色值。</p></li><li><p>注意： 直接从 span 中提取透明度信息在 PyMuPDF 中比较复杂，因为它通常是 PDF 内容流中的图形状态参数。为了实现真正的透明度识别，你可能需要渲染页面为图像后分析像素的 alpha 通道，或者进行更复杂的 PDF 内容流解析。在上面的代码中，我暂时移除了透明度的判断，主要依赖颜色匹配。</p></li><li><p>比较提取的颜色与已知水印特征，并设置一个容差范围。</p></li></ul><p><strong>难易度</strong>：★★★★☆</p><p><strong>优点</strong>： 对具有固定颜色（特别是浅色）的水印效果好。</p><p><strong>缺点</strong>： 透明度提取是难点，可能需要深入解析 PDF 内部结构或借助图像处理库。</p><h3 id="方法三：综合多特征的水印识别-xA"><a href="#方法三：综合多特征的水印识别-xA" class="headerlink" title="方法三：综合多特征的水印识别&#xA;"></a>方法三：综合多特征的水印识别&#xA;</h3><p>当水印特征明确且固定时，这个方法能提供最高的识别准确性，因为它结合了多种特征进行判断。</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">import fitz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def remove\_watermark\_by\_multiple\_features(input\_pdf, output\_pdf,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                                         font\_size, rotation\_angle,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                                         color\_rgb,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                                         size\_tolerance=1.5, rotation\_tolerance=5.0, color\_tolerance=10):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   根据多种特征组合去除PDF中的水印。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   不包含透明度参数，因为直接从text span获取透明度复杂。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   参数:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   input\_pdf (str): 输入PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   output\_pdf (str): 输出PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   font\_size (float): 水印字体大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   rotation\_angle (float): 水印旋转角度 (度)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   color\_rgb (tuple): 水印颜色的RGB值，如 (200, 200, 200)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   size\_tolerance (float): 字体大小匹配的容差</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   rotation\_tolerance (float): 旋转角度匹配的容差 (度)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   color\_tolerance (int): 颜色匹配的容差 (0-255)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc = fitz.open(input\_pdf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for page in doc:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 获取页面上的所有文本和它们的属性</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       text\_infos = page.get\_text(&quot;dict&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for block in text\_infos\[&quot;blocks&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if &quot;lines&quot; in block:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for line in block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 提取字体大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       current\_size = span\[&quot;size&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 计算旋转角度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       matrix = fitz.Matrix(span\[&quot;matrix&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       current\_rotation = math.degrees(math.atan2(matrix.b, matrix.a))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 提取颜色信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       color\_int = span\[&quot;color&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       r = (color\_int &gt;&gt; 16) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;                       g = (color\_int &gt;&gt; 8) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;                       b = (color\_int) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;                       current\_color\_rgb = (r, g, b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 综合多个特征进行匹配</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       size\_match = abs(current\_size - font\_size) &lt; size\_tolerance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       rotation\_match = abs(current\_rotation - rotation\_angle) &lt; rotation\_tolerance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       color\_match = (</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           abs(current\_color\_rgb\[0] - color\_rgb\[0]) &lt;= color\_tolerance and</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           abs(current\_color\_rgb\[1] - color\_rgb\[1]) &lt;= color\_tolerance and</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           abs(current\_color\_rgb\[2] - color\_rgb\[2]) &lt;= color\_tolerance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 如果所有特征都匹配，则认为是水印</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       if size\_match and rotation\_match and color\_match:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           \# 创建一个矩形区域用于覆盖水印</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           page.add\_redact\_annot(fitz.Rect(span\[&quot;bbox&quot;]), text=&quot;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 应用所有编辑</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       page.apply\_redactions()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 保存修改后的PDF</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.save(output\_pdf)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.close()</span><br></pre></td></tr></table></figure></div><p><strong>代码解析</strong>：</p><ul><li><p>综合提取字体大小、旋转角度和颜色三个特征（为了简化和实用性，移除了直接在 span 中获取的透明度判断）。</p></li><li><p>设置了合理的匹配容差范围，你可以根据实际情况调整这些容差值。</p></li><li><p>只有当所有选定的特征都匹配时才判定为水印，这大大提高了识别的准确性。</p></li></ul><p><strong>难易度</strong>：★★★★★</p><p><strong>优点</strong>： 识别准确性高，误判率极低。</p><p><strong>缺点</strong>： 实现相对复杂，需要精确的水印特征参数。</p><h3 id="方法四：基于文本特征的直接删除法-xA"><a href="#方法四：基于文本特征的直接删除法-xA" class="headerlink" title="方法四：基于文本特征的直接删除法&#xA;"></a>方法四：基于文本特征的直接删除法&#xA;</h3><p>如果你知道水印的具体文本内容，或者可以通过一些简单的文本属性来识别，这个方法最直接、最快速。</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line">import fitz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def is\_watermark\_span(span, target\_text=None, min\_size=None, max\_size=None, target\_color\_rgb=None, color\_tolerance=10):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   判断文本跨度是否为水印，可根据实际情况自定义判断条件。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   参数:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   span (dict): 文本跨度字典</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   target\_text (str): 可选，要匹配的水印文本内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   min\_size (float): 可选，水印字体最小尺寸</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   max\_size (float): 可选，水印字体最大尺寸</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   target\_color\_rgb (tuple): 可选，水印颜色的RGB值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   color\_tolerance (int): 颜色匹配的容差 (0-255)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 示例：判断字体大小、颜色等特征</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 可以根据实际情况组合多个条件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 字体大小判断</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   size\_match = True</span><br><span class="line"></span><br><span class="line">&amp;#x20;   if min\_size is not None and span\[&quot;size&quot;] &lt; min\_size:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       size\_match = False</span><br><span class="line"></span><br><span class="line">&amp;#x20;   if max\_size is not None and span\[&quot;size&quot;] &gt; max\_size:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       size\_match = False</span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 文本内容判断</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   text\_match = True</span><br><span class="line"></span><br><span class="line">&amp;#x20;   if target\_text is not None and target\_text.lower() not in span\[&quot;text&quot;].lower():</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       text\_match = False</span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 颜色判断</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   color\_match = True</span><br><span class="line"></span><br><span class="line">&amp;#x20;   if target\_color\_rgb is not None:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       color\_int = span\[&quot;color&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       r = (color\_int &gt;&gt; 16) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;       g = (color\_int &gt;&gt; 8) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;       b = color\_int &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;       current\_color\_rgb = (r, g, b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if not (abs(current\_color\_rgb\[0] - target\_color\_rgb\[0]) &lt;= color\_tolerance and</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               abs(current\_color\_rgb\[1] - target\_color\_rgb\[1]) &lt;= color\_tolerance and</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               abs(current\_color\_rgb\[2] - target\_color\_rgb\[2]) &lt;= color\_tolerance):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           color\_match = False</span><br><span class="line"></span><br><span class="line">&amp;#x20;   return size\_match and text\_match and color\_match</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def remove\_watermark\_by\_text\_features(doc\_path, output\_path, \*\*kwargs):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   根据文本特征去除PDF中的水印。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   参数:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc\_path (str): 输入PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   output\_path (str): 输出PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \*\*kwargs: 传递给 is\_watermark\_span 函数的参数，如 target\_text, min\_size, max\_size, target\_color\_rgb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc = fitz.open(doc\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for page in doc:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 搜索符合水印特征的文本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for block in page.get\_text(&quot;dict&quot;)\[&quot;blocks&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if block\[&quot;type&quot;] == 0:  # 文本块</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for line in block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       if is\_watermark\_span(span,\*\* kwargs):  # 自定义判断函数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           page.add\_redact\_annot(span\[&quot;bbox&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       page.apply\_redactions()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.save(output\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 示例用法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# remove\_watermark\_by\_text\_features(&quot;input.pdf&quot;, &quot;output.pdf&quot;, target\_text=&quot;CONFIDENTIAL&quot;, min\_size=10, max\_size=14, target\_color\_rgb=(204, 204, 204))</span><br></pre></td></tr></table></figure></div><p><strong>代码解析</strong>：</p><ul><li><p>通过一个可自定义的 <code>is_watermark_span</code> 函数直接搜索符合特定文本特征的水印内容。</p></li><li><p>你可以传入 <code>target_text</code>、<code>min_size</code>、<code>max_size</code> 和 <code>target_color_rgb</code> 等参数来精确定义水印的特征。</p></li><li><p>对判定为水印的文本进行覆盖处理。</p></li></ul><p><strong>难易度</strong>：★★☆☆☆</p><p><strong>优点</strong>： 实现简单，处理速度快，非常适合处理简单的文本水印。</p><p><strong>缺点</strong>： 仅适用于文本水印，无法处理图像水印。</p><h3 id="方法五：基于混合特征的高级识别法-xA"><a href="#方法五：基于混合特征的高级识别法-xA" class="headerlink" title="方法五：基于混合特征的高级识别法&#xA;"></a>方法五：基于混合特征的高级识别法&#xA;</h3><p>对于更复杂的 PDF 水印（例如包含文本和图像），这种方法结合了文本和图像特征识别，能够提供更高的识别精度。请注意，图像处理部分需要 numpy 和 opencv-python 库。</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br></pre></td><td class="code"><pre><span class="line">import fitz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import cv2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# Placeholder for actual watermark text detection logic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def is\_watermark\_text(span):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   判断文本跨度是否为水印。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   你可以根据实际情况在这里实现更复杂的文本水印判断逻辑，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   例如基于字体、颜色、大小、位置、重复性等。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 示例：假设所有满足特定尺寸和颜色的文本都是水印</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 真实应用中，你需要更精确的逻辑</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   color\_int = span\[&quot;color&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   r = (color\_int &gt;&gt; 16) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;   g = (color\_int &gt;&gt; 8) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;   b = color\_int &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 假设水印是浅灰色，字体较大</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if (100 &lt;= r &lt;= 220 and 100 &lt;= g &lt;= 220 and 100 &lt;= b &lt;= 220) and span\[&quot;size&quot;] &gt; 15:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       return True</span><br><span class="line"></span><br><span class="line">&amp;#x20;   return False</span><br><span class="line"></span><br><span class="line">def process\_watermark\_regions(page, text\_spans\_to\_redact, image\_regions\_to\_redact):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   处理识别到的水印区域。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 对文本水印区域进行处理</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for span\_bbox in text\_spans\_to\_redact:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       page.add\_redact\_annot(fitz.Rect(span\_bbox))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 对图像水印区域进行处理</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for region\_bbox in image\_regions\_to\_redact:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       page.add\_redact\_annot(fitz.Rect(region\_bbox))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   page.apply\_redactions()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def advanced\_watermark\_removal(doc\_path, output\_path, watermark\_template\_path=None):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   根据混合特征（文本和图像）去除PDF中的水印。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   参数:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc\_path (str): 输入PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   output\_path (str): 输出PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   watermark\_template\_path (str): 可选，水印图像模板的路径，用于SIFT特征匹配。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc = fitz.open(doc\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   watermark\_template = None</span><br><span class="line"></span><br><span class="line">&amp;#x20;   if watermark\_template\_path:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# Load watermark template in grayscale for SIFT</span><br><span class="line"></span><br><span class="line">&amp;#x20;       watermark\_template = cv2.imread(watermark\_template\_path, cv2.IMREAD\_GRAYSCALE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if watermark\_template is None:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           print(f&quot;警告：无法加载水印模板图像：&#123;watermark\_template\_path&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           watermark\_template\_path = None # Disable image matching if template fails to load</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   sift = cv2.SIFT\_create()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   kp1, des1 = None, None</span><br><span class="line"></span><br><span class="line">&amp;#x20;   if watermark\_template\_path and watermark\_template is not None:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       kp1, des1 = sift.detectAndCompute(watermark\_template, None)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for page in doc:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       text\_spans\_to\_redact = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       image\_regions\_to\_redact = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 第一步：文本特征识别</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       text\_infos = page.get\_text(&quot;dict&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for block in text\_infos\[&quot;blocks&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if &quot;lines&quot; in block:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for line in block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       if is\_watermark\_text(span): # 检查字体/颜色等</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                           text\_spans\_to\_redact.append(span\[&quot;bbox&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 第二步：图像特征识别 (如果提供了水印模板)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if watermark\_template\_path and watermark\_template is not None and des1 is not None:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           pix = page.get\_pixmap(matrix=fitz.Matrix(2,2)) # 提高渲染分辨率以便更好的特征检测</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           img = cv2.cvtColor(np.frombuffer(pix.samples, np.uint8).reshape(</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               pix.h, pix.w, pix.n), cv2.COLOR\_RGB2GRAY) # 转为灰度图进行特征检测</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           kp2, des2 = sift.detectAndCompute(img, None)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           if des2 is not None and len(des1) &gt; 0 and len(des2) &gt; 0:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 特征匹配</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               matcher = cv2.BFMatcher()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               matches = matcher.knnMatch(des1, des2, k=2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 筛选良好的匹配点</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               good\_matches = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for m, n in matches:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   if m.distance &lt; 0.75 \* n.distance: # 0.75是经验值，可调</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       good\_matches.append(m)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;              &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               \# 如果匹配点足够多，则认为存在图像水印</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               if len(good\_matches) &gt; 10: # 至少需要10个好的匹配点</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 尝试找到水印在页面上的大致位置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   src\_pts = np.float32(\[kp1\[m.queryIdx].pt for m in good\_matches]).reshape(-1, 1, 2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   dst\_pts = np.float32(\[kp2\[m.trainIdx].pt for m in good\_matches]).reshape(-1, 1, 2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 使用 findHomography 找到变换矩阵</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   M, mask = cv2.findHomography(src\_pts, dst\_pts, cv2.RANSAC, 5.0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   if M is not None:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       h, w = watermark\_template.shape</span><br><span class="line"></span><br><span class="line">&amp;#x20;                       pts = np.float32(\[\[0, 0], \[0, h-1], \[w-1, h-1], \[w-1, 0]]).reshape(-1, 1, 2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 应用变换矩阵，得到水印在页面上的四个角点</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       dst = cv2.perspectiveTransform(pts, M)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       \# 计算水印区域的边界框</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       min\_x = int(np.min(dst\[:, 0, 0]) / pix.matrix.a) # 还原到原始PDF坐标</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       min\_y = int(np.min(dst\[:, 0, 1]) / pix.matrix.d)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       max\_x = int(np.max(dst\[:, 0, 0]) / pix.matrix.a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       max\_y = int(np.max(dst\[:, 0, 1]) / pix.matrix.d)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                       image\_regions\_to\_redact.append((min\_x, min\_y, max\_x, max\_y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 综合处理文本和图像水印</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       process\_watermark\_regions(page, text\_spans\_to\_redact, image\_regions\_to\_redact)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.save(output\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 示例用法（需要准备一个 watermark\_template.png 图片作为水印模板）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# advanced\_watermark\_removal(&quot;input.pdf&quot;, &quot;output.pdf&quot;, &quot;watermark\_template.png&quot;)</span><br></pre></td></tr></table></figure></div><p><strong>代码解析</strong>：</p><ul><li><p><strong>文本特征识别</strong>： 沿用了之前 <code>is_watermark_text</code> 的概念，但你需要根据实际水印特性来完善这个逻辑。</p></li><li><p><strong>图像特征识别</strong>：</p><ul><li><p>将 PDF 页面渲染为图像，并转换为灰度图，以便进行特征检测。</p></li><li><p>使用 SIFT 算法（或其他特征匹配算法如 ORB, SURF）来检测并匹配图像水印模板。</p></li><li><p>通过 <code>findHomography</code> 计算水印在页面上的变换，从而确定水印的精确位置和边界框。</p></li><li><p>注意： 图像处理库 (如 OpenCV) 通常在像素坐标系下操作，你需要将检测到的像素坐标转换回 PyMuPDF 使用的 PDF 坐标。</p></li></ul></li><li><p><strong>综合处理</strong>： 将文本和图像识别的结果结合起来，对所有识别出的水印区域进行处理。</p></li></ul><p><strong>难易度</strong>：★★★★☆</p><p><strong>优点</strong>： 识别精度高，适用于复杂水印环境（文本与图像混合），鲁棒性强。</p><p><strong>缺点</strong>： 实现复杂，需要水印模板，处理速度相对较慢，需要额外的图像处理库。</p><h3 id="方法六：基于-PDF-底层结构的终极方案-xA"><a href="#方法六：基于-PDF-底层结构的终极方案-xA" class="headerlink" title="方法六：基于 PDF 底层结构的终极方案&#xA;"></a>方法六：基于 PDF 底层结构的终极方案&#xA;</h3><p>这种方法最为彻底，因为它直接操作 PDF 文件的底层结构。但它也要求你对 PDF 规范有深入的了解，操作不当可能会导致文件损坏。</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">import fitz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def deep\_watermark\_removal(doc\_path, output\_path):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   通过直接操作PDF的XObject和内容流，尝试去除水印。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   这是一种更底层、更彻底的方式，但需要对PDF结构有一定了解。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   注意：此方法可能非常具体，不适用于所有水印类型，且操作不当可能损坏PDF。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc = fitz.open(doc\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for page\_num, page in enumerate(doc):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 尝试通过删除XObject（外部对象，可能是图像或Form XObject）来去除水印</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 这需要猜测哪些XObject是水印。通常水印是透明的或在底层。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# PyMuPDF没有直接的 delete\_object 方法，通常的做法是重新构建内容流或用add\_redact\_annot。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 如果水印是作为独立XObject嵌入的，你可以尝试识别并替换页面内容流中对它们的引用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 这是一个非常高级且风险高的操作，这里我们不直接修改XObject，而是依赖redaction。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 另一种思路是检查页面内容流中是否存在特定的操作符，例如设置透明度或特定颜色。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 但这需要更深入的解析内容流。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 目前PyMuPDF没有直接暴露修改/删除底层XObject的API，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# add\_redact\_annot 是最安全和推荐的方式来“删除”页面内容。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 如果水印是文本，可以结合方法1-4来识别。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 如果水印是图像，但不是作为XObject直接插入，而是作为背景，则需要渲染后处理。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 示例：尝试查找并删除名称中可能包含“Watermark”的Form XObject引用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 这是一个象征性的操作，实际操作会复杂得多。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 获取页面的内容流</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#contents = page.get\_contents() # 这是内容流的列表，每个元素是一个对象ID</span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#for item\_id in contents:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#    item\_obj = doc.get\_pdf\_object(item\_id) # 获取实际的PDF对象</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#    if item\_obj:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        content\_bytes = item\_obj.read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        # 检查内容流中是否有水印相关的指令，例如 /DeviceGray Cs, /CA 0.x, /ca 0.x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        # 这是一个高度定制化的过程，取决于水印是如何被创建的。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        # 通常水印文本会使用特定的字体、颜色和透明度设置。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        # 我们可以尝试替换掉这些设置或其相关的文本/图像绘图指令。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        # 例如，如果水印被标记为 /Watermark，可以尝试移除这个标记</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        # 警告：直接修改内容流非常危险，可能导致PDF损坏。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        # content\_stream = content\_bytes.replace(b&quot;/Watermark&quot;, b&quot;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        # 如果内容流对象是可写的，可以尝试更新它</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        # doc.update\_object(item\_id, content\_stream)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \#        pass # 实际不执行直接修改，而是使用更安全的redaction</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 由于PyMuPDF没有直接删除XObject的简单API，并且直接修改内容流风险高，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 这种“终极方案”通常指的是在更底层的PDF解析库中实现。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 在PyMuPDF的语境下，最安全和推荐的“底层”处理是使用 redact\_annot 来覆盖。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 如果水印是作为 Form XObject 嵌入，且它们是半透明的，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# PyMuPDF 的 page.get\_text(&quot;dict&quot;) 或 page.get\_images() 可能无法直接识别。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 此时，可能需要：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 1. 遍历页面所有对象（PyMuPDF不直接提供此功能，除非通过高级解析）。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 2. 渲染页面并进行图像处理，识别水印区域，然后进行 redact。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;      &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 总结：此方法在PyMuPDF中实现非常困难且不推荐，除非对PDF内部结构有极深理解。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 推荐使用前面更安全、更易于控制的基于特征的redaction方法。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 为了让这个函数有实际意义，我们可以让它在非常明确的情况下执行redaction</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 例如，如果你知道水印是某个特定名称的Form XObject，但通常PyMuPDF不直接暴露这个</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       print(f&quot;Warning: Method 6 (deep\_watermark\_removal) in PyMuPDF is generally not feasible for direct object deletion without significant PDF internal structure parsing and modification, which is outside the scope of simple PyMuPDF APIs. Using redaction is the recommended safe approach.&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 如果水印是透明度很高的图像，可能需要渲染页面然后用图像处理来识别并redact</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 这里为了避免误导，不提供具体实现，仅保留框架。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.save(output\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.close()</span><br></pre></td></tr></table></figure></div><p><strong>代码解析</strong>：</p><ul><li><p>这个方法旨在直接操作 PDF 的 XObject (外部对象，可以是图像或 Form XObject) 和内容流。</p></li><li><p><strong>重要提示</strong>： PyMuPDF (Fitz) 并没有直接暴露修改或删除底层 PDF 对象的 API。 <code>add_redact_annot</code> 是 PyMuPDF 中最安全和推荐的方式来 “删除” 页面内容的。直接修改 PDF 的底层内容流非常危险，操作不当很可能导致 PDF 文件损坏且无法打开。</p></li><li><p>因此，我调整了此方法的描述和代码示例，强调其复杂性和风险，并指出在 PyMuPDF 中，更推荐使用 <code>add_redact_annot</code> 来实现 “删除” 效果。如果你真的需要深入到 PDF 底层修改，可能需要更专业的 PDF 处理库或对 PDF 规范有极其深入的了解。</p></li></ul><p><strong>难易度</strong>：★★★★★ (理论上)</p><p><strong>优点</strong>： 理论上可以彻底清除不留痕迹，适用于各种类型水印。</p><p><strong>缺点</strong>： 实现非常复杂，需要深入的 PDF 结构知识，且在 PyMuPDF 中直接实现此类操作难度极高且风险大。</p><p>方法对比与选择建议</p><table><thead><tr><th>方法&#xA;</th><th>难易度&#xA;</th><th>适用场景&#xA;</th><th>关键优势&#xA;</th><th>局限性&#xA;</th></tr></thead><tbody><tr><td>字体大小 + 旋转角度&#xA;</td><td>★★★☆☆&#xA;</td><td>水印有固定大小和倾斜角度&#xA;</td><td>实现相对简单，识别准确率较高&#xA;</td><td>需要精确的大小和角度参数&#xA;</td></tr><tr><td>透明度 + 颜色&#xA;</td><td>★★★★☆&#xA;</td><td>水印有固定颜色（特别是浅色）&#xA;</td><td>对浅色水印效果好&#xA;</td><td>透明度提取是难点，可能需要深入解析 PDF 内部结构或借助图像处理库&#xA;</td></tr><tr><td>多特征综合&#xA;</td><td>★★★★★&#xA;</td><td>水印特征明确且固定&#xA;</td><td>识别准确性高，误判率极低&#xA;</td><td>实现相对复杂，需要精确的水印特征参数&#xA;</td></tr><tr><td>基于文本特征&#xA;</td><td>★★☆☆☆&#xA;</td><td>简单文本水印&#xA;</td><td>实现简单，处理速度快&#xA;</td><td>仅适用于文本水印，无法处理图像水印&#xA;</td></tr><tr><td>混合特征识别&#xA;</td><td>★★★★☆&#xA;</td><td>复杂水印环境（文本与图像混合）&#xA;</td><td>识别精度高&#xA;</td><td>实现复杂，需要水印模板，处理速度慢&#xA;</td></tr><tr><td>底层结构处理&#xA;</td><td>★★★★★&#xA;</td><td>各种类型水印&#xA;</td><td>理论上最彻底&#xA;</td><td>高风险，PyMuPDF 中难以直接实现，需要深厚知识&#xA;</td></tr></tbody></table><p>特征参数提取方法</p><p>在实际应用中，我们首先需要获取水印的特征参数。可以通过以下方式初步提取：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line">import fitz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from collections import Counter</span><br><span class="line"></span><br><span class="line">def extract\_watermark\_features(pdf\_path, page\_num=0):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   尝试提取PDF页面中可能的水印文本特征。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   此函数会返回页面中最常见的字体大小、旋转角度和颜色。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   这仅是一个初步分析工具，对于复杂水印可能需要人工确认或更复杂的统计。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   参数:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   pdf\_path (str): PDF文件路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   page\_num (int): 要分析的页面编号 (默认为第一页)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   返回:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   dict: 包含可能的水印特征的字典，如 &quot;font\_size&quot;, &quot;rotation\_angle&quot;, &quot;color\_rgb&quot;, &quot;opacity&quot;(占位)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc = fitz.open(pdf\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   page = doc\[page\_num]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 用于存储可能的水印特征</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   possible\_font\_sizes = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   possible\_rotations = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   possible\_colors = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 获取页面上的所有文本和它们的属性</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   text\_infos = page.get\_text(&quot;dict&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for block in text\_infos\[&quot;blocks&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if &quot;lines&quot; in block:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           for line in block\[&quot;lines&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               for span in line\[&quot;spans&quot;]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 提取字体大小</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   possible\_font\_sizes.append(round(span\[&quot;size&quot;], 1)) # 四舍五入到小数点后1位，便于统计</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 计算旋转角度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   matrix = fitz.Matrix(span\[&quot;matrix&quot;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   rotation = round(math.degrees(math.atan2(matrix.b, matrix.a)), 1) # 四舍五入，便于统计</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   possible\_rotations.append(rotation)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   \# 提取颜色信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   color\_int = span\[&quot;color&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;                   r = (color\_int &gt;&gt; 16) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;                   g = (color\_int &gt;&gt; 8) &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;                   b = color\_int &amp; 0xFF</span><br><span class="line"></span><br><span class="line">&amp;#x20;                   possible\_colors.append((r, g, b))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 简单分析：找出最常见的特征值作为水印特征</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \# 实际应用中可能需要更复杂的聚类分析或人工确认</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;  &amp;#x20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   font\_size = None</span><br><span class="line"></span><br><span class="line">&amp;#x20;   if possible\_font\_sizes:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       font\_size = Counter(possible\_font\_sizes).most\_common(1)\[0]\[0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   rotation\_angle = None</span><br><span class="line"></span><br><span class="line">&amp;#x20;   if possible\_rotations:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       rotation\_angle = Counter(possible\_rotations).most\_common(1)\[0]\[0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 旋转角度可能为负，将其规范化到 0-360 度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       if rotation\_angle &lt; 0:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           rotation\_angle += 360</span><br><span class="line"></span><br><span class="line">&amp;#x20;   color\_rgb = None</span><br><span class="line"></span><br><span class="line">&amp;#x20;   if possible\_colors:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       color\_rgb = Counter(possible\_colors).most\_common(1)\[0]\[0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   doc.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   return &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;font\_size&quot;: font\_size,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;rotation\_angle&quot;: rotation\_angle,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;color\_rgb&quot;: color\_rgb,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &quot;opacity&quot;: 0.5  # 这是一个示例值，实际中透明度提取非常复杂，需要手动确认或更高级分析</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 示例用法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# features = extract\_watermark\_features(&quot;your\_watermarked\_document.pdf&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# print(features)</span><br></pre></td></tr></table></figure></div><p><strong>代码解析</strong>：</p><ul><li><p>此函数会遍历指定页面的所有文本跨度，收集它们的字体大小、旋转角度和颜色。</p></li><li><p>为了方便统计，对浮点数（大小和角度）进行了四舍五入。</p></li><li><p>使用 <code>collections.Counter</code> 找出最常见的字体大小、旋转角度和颜色，作为可能的水印特征。</p></li><li><p>注意： 提取透明度仍然是一个挑战，<code>opacity</code> 参数在此处仍作为占位符，需要通过其他方式（例如手动观察或更复杂的 PDF 内容流解析）来确定。</p></li></ul><p>总结与最佳实践</p><p>基于特征的 PDF 水印处理方法能够实现更精确的水印识别和去除，但这要求你对水印的特征有充分了解。在实际应用中，我建议你遵循以下最佳实践：</p><ol><li><p><strong>预处理分析</strong>： 首先使用 <code>extract_watermark_features</code> 函数分析水印特征，初步了解水印的字体大小、旋转角度、颜色等关键信息。必要时，手工观察水印，确认其透明度、具体文本内容或图像样式。</p></li><li><p><strong>从简到繁尝试</strong>： 从最简单的方法开始。如果水印是纯文本且特征明显，可以先尝试 基于文本特征的直接删除法。如果水印有固定的字体大小和倾斜角度，就用 基于字体大小和旋转角度的方法。只有当简单方法效果不佳时，再逐步增加特征维度，尝试 多特征综合识别。</p></li><li><p><strong>合理调整参数</strong>： 根据实际水印情况细致调整匹配容差值，在识别准确率和误判率之间取得最佳平衡。例如，对于字体大小，可以允许 1.0 到 2.0 的误差范围；对于旋转角度，可允许 3 到 5 度左右的误差。</p></li><li><p><strong>复杂场景组合</strong>： 对于包含多种类型水印的复杂 PDF，考虑结合多种方法进行处理。例如，对于既有文本又有图像的混合水印，可以结合 混合特征识别法。</p></li><li><p><strong>批量处理技巧</strong>： 如果你需要处理大量 PDF 文件，利用多线程或多进程可以显著提高处理效率。</p></li></ol><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">from concurrent.futures import ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def batch\_process\_pdfs(file\_list, output\_dir, \*\*watermark\_params):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   批量处理PDF文件，使用多线程提高效率。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   参数:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   file\_list (list): 包含所有待处理PDF文件路径的列表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   output\_dir (str): 处理后PDF文件的输出目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \*\*watermark\_params: 传递给 remove\_watermark\_by\_multiple\_features 的水印特征参数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   os.makedirs(output\_dir, exist\_ok=True) # 确保输出目录存在</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   with ThreadPoolExecutor(max\_workers=os.cpu\_count()) as executor: # 使用CPU核心数作为最大工作线程数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       futures = \[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for file\_path in file\_list:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           file\_name = os.path.basename(file\_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           output\_path = os.path.join(output\_dir, file\_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           \# 提交任务到线程池</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           futures.append(executor.submit(</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               remove\_watermark\_by\_multiple\_features,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               file\_path, output\_path,\*\* watermark\_params</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           ))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \# 等待所有任务完成</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       for future in futures:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           try:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               future.result() # 获取结果，如果任务有异常会在这里抛出</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               print(f&quot;文件处理完成：&#123;file\_path&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           except Exception as exc:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;               print(f&quot;文件 &#123;file\_path&#125; 处理时发生错误：&#123;exc&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 示例用法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# pdf\_files\_to\_process = \[&quot;doc1.pdf&quot;, &quot;doc2.pdf&quot;] # 你的PDF文件列表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# output\_folder = &quot;processed\_pdfs&quot;</span><br><span class="line"></span><br><span class="line">\# watermark\_features = &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\#     &quot;font\_size&quot;: 36.0,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\#     &quot;rotation\_angle&quot;: 30.0,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\#     &quot;color\_rgb&quot;: (192, 192, 192) # 浅灰色</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# batch\_process\_pdfs(pdf\_files\_to\_process, output\_folder, \*\*watermark\_features)</span><br></pre></td></tr></table></figure></div><ol><li><strong>操作安全保障</strong>： 在处理任何重要文件之前，务必先备份原始文件！这能确保即使处理不当，你也不会丢失原始数据。同时，请始终遵守相关法律法规，仅处理你有权修改的文档，尊重知识产权和版权保护。</li></ol><p>通过合理选择和组合这些方法，你就能高效且精准地处理各种具有特定特征的 PDF 水印。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在日常工作中，我们经常会遇到带有特定特征的 PDF 水印，比如固定的字体大小、倾斜角度、透明度和颜色。这些特性为我们提供了更精准地识别水印的依据。今天，我们就来深入探讨如何利用 PyMuPDF (Fitz) 库，基于这些特征实现 PDF 水印的精确识别和去除，并整合多种实用</summary>
      
    
    
    
    <category term="PDF 处理" scheme="http://example.com/categories/PDF-%E5%A4%84%E7%90%86/"/>
    
    <category term="Python" scheme="http://example.com/categories/PDF-%E5%A4%84%E7%90%86/Python/"/>
    
    <category term="数据处理" scheme="http://example.com/categories/PDF-%E5%A4%84%E7%90%86/Python/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="PyMuPDF" scheme="http://example.com/tags/PyMuPDF/"/>
    
    <category term="PDF" scheme="http://example.com/tags/PDF/"/>
    
    <category term="水印去除" scheme="http://example.com/tags/%E6%B0%B4%E5%8D%B0%E5%8E%BB%E9%99%A4/"/>
    
    <category term="特征识别" scheme="http://example.com/tags/%E7%89%B9%E5%BE%81%E8%AF%86%E5%88%AB/"/>
    
    <category term="文本处理" scheme="http://example.com/tags/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>从零开始的爬虫生活（一）：环境搭建与基础库应用</title>
    <link href="http://example.com/2025/07/15/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E7%88%AC%E8%99%AB%E7%94%9F%E6%B4%BB%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80%E5%BA%93%E5%BA%94%E7%94%A8/"/>
    <id>http://example.com/2025/07/15/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E7%88%AC%E8%99%AB%E7%94%9F%E6%B4%BB%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80%E5%BA%93%E5%BA%94%E7%94%A8/</id>
    <published>2025-07-15T09:15:15.000Z</published>
    <updated>2025-07-16T01:50:53.379Z</updated>
    
    <content type="html"><![CDATA[<p>从零开始的爬虫生活（一）：环境搭建与基础库应用</p><p>一、环境搭建</p><p>在开始学习爬虫之前，我们需要先搭建好开发环境。以下是一些常用的工具和库：</p><h3 id="1-Python-环境-xA"><a href="#1-Python-环境-xA" class="headerlink" title="1. Python 环境&#xA;"></a>1. Python 环境&#xA;</h3><p>确保已经安装了 Python 3.x 版本。可以前往 <a class="link"   href="https://www.python.org/" >Python 官网<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> 下载安装。</p><h3 id="2-常用库安装-xA"><a href="#2-常用库安装-xA" class="headerlink" title="2. 常用库安装&#xA;"></a>2. 常用库安装&#xA;</h3><p>使用 pip 命令安装以下库：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pip install beautifulsoup4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pip install pyquery</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pip install pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pip install pymongo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pip install redis</span><br></pre></td></tr></table></figure></div><h3 id="3-浏览器驱动-xA"><a href="#3-浏览器驱动-xA" class="headerlink" title="3. 浏览器驱动&#xA;"></a>3. 浏览器驱动&#xA;</h3><ul><li><p><strong>ChromeDriver</strong>：根据你使用的 Chrome 浏览器版本，下载对应的 ChromeDriver。</p></li><li><p><strong>PhantomJS（已弃用）</strong>：在 Selenium 4.x 中已移除，建议使用无头模式的 Chrome。</p></li></ul><p><strong>配置 Chrome 无头模式示例：</strong></p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from selenium.webdriver.chrome.options import Options</span><br><span class="line"></span><br><span class="line">\# 配置 Chrome 为无头模式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chrome\_options = Options()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chrome\_options.add\_argument(&quot;--headless&quot;)  # 无头模式，不显示浏览器窗口</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\# 创建 Chrome 浏览器实例</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(options=chrome\_options)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver.get(&quot;https://www.example.com&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(driver.title)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure></div><p>二、基础库应用</p><h3 id="1-BeautifulSoup-库-xA"><a href="#1-BeautifulSoup-库-xA" class="headerlink" title="1. BeautifulSoup 库&#xA;"></a>1. BeautifulSoup 库&#xA;</h3><p>BeautifulSoup 是一个用于解析 HTML 和 XML 文档的库。<strong>示例：</strong></p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">from bs4 import BeautifulSoup</span><br><span class="line"></span><br><span class="line">html\_doc = &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\&lt;html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \&lt;head&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \&lt;title&gt;示例页面\&lt;/title&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \&lt;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \&lt;h1&gt;标题\&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \&lt;p&gt;段落内容\&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html\_doc, &#x27;html.parser&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(soup.title.string)  # 输出标题内容</span><br></pre></td></tr></table></figure></div><h3 id="2-PyQuery-库-xA"><a href="#2-PyQuery-库-xA" class="headerlink" title="2. PyQuery 库&#xA;"></a>2. PyQuery 库&#xA;</h3><p>PyQuery 是一个类 jQuery 的 Python 库，用于操作 HTML 文档。<strong>示例：</strong></p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">from pyquery import PyQuery as pq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">html\_doc = &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\&lt;html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \&lt;head&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \&lt;title&gt;示例页面\&lt;/title&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \&lt;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \&lt;h1&gt;标题\&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       \&lt;p&gt;段落内容\&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   \&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">doc = pq(html\_doc)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(doc(&#x27;title&#x27;).text())  # 输出标题内容</span><br></pre></td></tr></table></figure></div><h3 id="3-Requests-库-xA"><a href="#3-Requests-库-xA" class="headerlink" title="3. Requests 库&#xA;"></a>3. Requests 库&#xA;</h3><p>Requests 是一个简单的 HTTP 库，用于发送网络请求。<strong>示例：</strong></p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = &quot;https://www.example.com&quot;</span><br><span class="line"></span><br><span class="line">response = requests.get(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(response.text)  # 输出网页内容</span><br></pre></td></tr></table></figure></div><p>三、数据存储</p><h3 id="1-MySQL-数据库-xA"><a href="#1-MySQL-数据库-xA" class="headerlink" title="1. MySQL 数据库&#xA;"></a>1. MySQL 数据库&#xA;</h3><p>使用 PyMySQL 连接和操作 MySQL 数据库：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   host=&#x27;localhost&#x27;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   user=&#x27;root&#x27;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   password=&#x27;123456&#x27;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   port=3306,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   db=&#x27;mysql&#x27;</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cursor.execute(&#x27;SELECT \* FROM db&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(cursor.fetchone())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure></div><h3 id="2-MongoDB-数据库-xA"><a href="#2-MongoDB-数据库-xA" class="headerlink" title="2. MongoDB 数据库&#xA;"></a>2. MongoDB 数据库&#xA;</h3><p>使用 PyMongo 连接和操作 MongoDB 数据库：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import pymongo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">client = pymongo.MongoClient(&#x27;localhost&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db = client\[&#x27;newtestdb&#x27;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db\[&#x27;table&#x27;].insert\_one(&#123;&#x27;name&#x27;: &#x27;Bob&#x27;&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = db\[&#x27;table&#x27;].find\_one(&#123;&#x27;name&#x27;: &#x27;Bob&#x27;&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure></div><h3 id="3-Redis-数据库-xA"><a href="#3-Redis-数据库-xA" class="headerlink" title="3. Redis 数据库&#xA;"></a>3. Redis 数据库&#xA;</h3><p>使用 RedisPy 连接和操作 Redis 数据库：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import redis</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = redis.Redis(&#x27;localhost&#x27;, 6379)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.set(&#x27;name&#x27;, &#x27;Bob&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = r.get(&#x27;name&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure></div><p>四、爬虫基本流程</p><p>爬虫的基本流程如下：</p><ol><li><p>发送请求：使用 Requests 库发送 HTTP 请求获取网页内容。</p></li><li><p>解析响应：使用 BeautifulSoup 或 PyQuery 库解析网页内容，提取所需数据。</p></li><li><p>保存数据：将提取的数据存储到数据库或文件中。</p></li></ol><p><strong>示例：爬取猫眼电影 TOP100</strong></p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from multiprocessing import Pool</span><br><span class="line"></span><br><span class="line">def get\_one\_page(url):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   headers = &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0&#x27;</span><br><span class="line"></span><br><span class="line">&amp;#x20;   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   response = requests.get(url, headers=headers)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   if response.status\_code == 200:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       return response.text</span><br><span class="line"></span><br><span class="line">&amp;#x20;   return None</span><br><span class="line"></span><br><span class="line">def parse\_one\_page(html):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   pattern = re.compile(&#x27;\&lt;dd&gt;.\*?board-index.\*?&gt;(\d+)\&lt;/i&gt;.\*?data-src=&quot;(.\*?)&quot;.\*?name&quot;&gt;\&lt;a&#x27;</span><br><span class="line"></span><br><span class="line">&amp;#x20;                        \+ &#x27;.\*?&gt;(.\*?)\&lt;/a&gt;.\*?star&quot;&gt;(.\*?)\&lt;/p&gt;.\*?releasetime&quot;&gt;(.\*?)\&lt;/p&gt;&#x27;</span><br><span class="line"></span><br><span class="line">&amp;#x20;                        \+ &#x27;.\*?integer&quot;&gt;(.\*?)\&lt;/i&gt;.\*?fraction&quot;&gt;(.\*?)\&lt;/i&gt;.\*?\&lt;/dd&gt;&#x27;, re.S)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   items = re.findall(pattern, html)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for item in items:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       yield &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#x27;index&#x27;: item\[0],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#x27;image&#x27;: item\[1],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#x27;title&#x27;: item\[2],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#x27;actor&#x27;: item\[3].strip()\[3:],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#x27;time&#x27;: item\[4].strip()\[5:],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;           &#x27;score&#x27;: item\[5] + item\[6]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def write\_to\_file(content):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   with open(&#x27;result.txt&#x27;, &#x27;a&#x27;, encoding=&#x27;utf-8&#x27;) as f:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       f.write(json.dumps(content, ensure\_ascii=False) + &#x27;\n&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main(offset):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   url = &#x27;http://maoyan.com/board/4?offset=&#x27; + str(offset)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   html = get\_one\_page(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   for item in parse\_one\_page(html):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       print(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;       write\_to\_file(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if \_\_name\_\_ == &#x27;\_\_main\_\_&#x27;:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   pool = Pool()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;#x20;   pool.map(main, \[i \* 10 for i in range(10)])</span><br></pre></td></tr></table></figure></div><p>五、动态网页处理</p><p>对于动态加载的网页，可以使用 Selenium 模拟浏览器操作。<strong>示例：</strong></p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from selenium.webdriver.common.by import By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver.get(&#x27;https://www.taobao.com&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">input = driver.find\_element(By.ID, &#x27;q&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">input.send\_keys(&#x27;美食&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">button = driver.find\_element(By.CLASS\_NAME, &#x27;btn-search&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">button.click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure></div><p>六、爬虫框架</p><h3 id="1-Scrapy-框架-xA"><a href="#1-Scrapy-框架-xA" class="headerlink" title="1. Scrapy 框架&#xA;"></a>1. Scrapy 框架&#xA;</h3><p>Scrapy 是一个强大的爬虫框架，可以简化爬虫开发过程。<strong>安装命令：</strong></p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从零开始的爬虫生活（一）：环境搭建与基础库应用&lt;/p&gt;
&lt;p&gt;一、环境搭建&lt;/p&gt;
&lt;p&gt;在开始学习爬虫之前，我们需要先搭建好开发环境。以下是一些常用的工具和库：&lt;/p&gt;
&lt;h3 id=&quot;1-Python-环境-xA&quot;&gt;&lt;a href=&quot;#1-Python-环境-xA&quot; c</summary>
      
    
    
    
    <category term="爬虫教程" scheme="http://example.com/categories/%E7%88%AC%E8%99%AB%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Python爬虫" scheme="http://example.com/tags/Python%E7%88%AC%E8%99%AB/"/>
    
    <category term="数据抓取" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8F%96/"/>
    
    <category term="Selenium" scheme="http://example.com/tags/Selenium/"/>
    
    <category term="BeautifulSoup" scheme="http://example.com/tags/BeautifulSoup/"/>
    
    <category term="数据存储" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>Dify镜像源替换与服务启动</title>
    <link href="http://example.com/2025/07/15/Dify-%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B%EF%BC%9A%E9%95%9C%E5%83%8F%E6%BA%90%E6%9B%BF%E6%8D%A2%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8/"/>
    <id>http://example.com/2025/07/15/Dify-%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B%EF%BC%9A%E9%95%9C%E5%83%8F%E6%BA%90%E6%9B%BF%E6%8D%A2%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8/</id>
    <published>2025-07-15T02:17:31.000Z</published>
    <updated>2025-07-16T01:50:52.195Z</updated>
    
    <content type="html"><![CDATA[<p>Dify 部署流程：镜像源替换与服务启动</p><p>一、Dify 镜像源替换操作</p><h3 id="批量替换镜像前缀-xA"><a href="#批量替换镜像前缀-xA" class="headerlink" title="批量替换镜像前缀&#xA;"></a>批量替换镜像前缀&#xA;</h3><p>在 docker-compose.yaml 所在目录执行全局替换，添加 docker.1ms.run&#x2F; 前缀：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/image: /image: docker.1ms.run\\//g&#x27; docker-compose.yaml</span><br></pre></td></tr></table></figure></div><h3 id="特殊镜像路径修正-xA"><a href="#特殊镜像路径修正-xA" class="headerlink" title="特殊镜像路径修正&#xA;"></a>特殊镜像路径修正&#xA;</h3><h4 id="问题路径-xA"><a href="#问题路径-xA" class="headerlink" title="问题路径&#xA;"></a>问题路径&#xA;</h4><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image: docker.1ms.run/docker.elastic.co/elasticsearch/elasticsearch:8.14.3</span><br></pre></td></tr></table></figure></div><h4 id="修正命令-xA"><a href="#修正命令-xA" class="headerlink" title="修正命令&#xA;"></a>修正命令&#xA;</h4><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s|docker.1ms.run/docker.elastic.co/|docker.1ms.run/elastic/|g&#x27; docker-compose.yaml</span><br></pre></td></tr></table></figure></div><h4 id="正确路径-xA"><a href="#正确路径-xA" class="headerlink" title="正确路径&#xA;"></a>正确路径&#xA;</h4><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image: docker.1ms.run/elastic/elasticsearch:8.14.3</span><br></pre></td></tr></table></figure></div><h3 id="基础镜像补充替换-xA"><a href="#基础镜像补充替换-xA" class="headerlink" title="基础镜像补充替换&#xA;"></a>基础镜像补充替换&#xA;</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s|image: postgres:|image: docker.1ms.run/postgres:|g&#x27; docker-compose.yaml</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s|image: redis:|image: docker.1ms.run/redis:|g&#x27; docker-compose.yaml</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s|image: nginx:|image: docker.1ms.run/nginx:|g&#x27; docker-compose.yaml</span><br></pre></td></tr></table></figure></div><p>二、部署前准备工作</p><p>赋予挂载目录权限：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 ./volumes ./elasticsearch</span><br></pre></td></tr></table></figure></div><p>三、启动与验证 Dify 服务</p><h3 id="后台启动服务-xA"><a href="#后台启动服务-xA" class="headerlink" title="后台启动服务&#xA;"></a>后台启动服务&#xA;</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></div><h3 id="验证服务状态-xA"><a href="#验证服务状态-xA" class="headerlink" title="验证服务状态&#xA;"></a>验证服务状态&#xA;</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker-compose ps  # 检查容器运行状态</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker-compose logs -f  # 查看实时日志</span><br></pre></td></tr></table></figure></div><h3 id="访问-Dify-界面-xA"><a href="#访问-Dify-界面-xA" class="headerlink" title="访问 Dify 界面&#xA;"></a>访问 Dify 界面&#xA;</h3><p>浏览器输入 http:&#x2F;&#x2F; 服务器 IP:3000，默认账号 <a class="link"   href="mailto:&#x61;&#x64;&#x6d;&#x69;&#110;&#x40;&#101;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#x6f;&#x6d;" >admin@example.com<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，密码 password。</p><p>四、部署过程常见问题</p><h3 id="镜像路径嵌套错误-xA"><a href="#镜像路径嵌套错误-xA" class="headerlink" title="镜像路径嵌套错误&#xA;"></a>镜像路径嵌套错误&#xA;</h3><h4 id="问题-xA"><a href="#问题-xA" class="headerlink" title="问题&#xA;"></a>问题&#xA;</h4><p>镜像路径包含 docker.1ms.run&#x2F;docker.elastic.co&#x2F; 嵌套结构。</p><h4 id="解决-xA"><a href="#解决-xA" class="headerlink" title="解决&#xA;"></a>解决&#xA;</h4><p>使用 sed 精准替换：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s|docker.1ms.run/docker.elastic.co/|docker.1ms.run/elastic/|g&#x27; docker-compose.yaml</span><br></pre></td></tr></table></figure></div><h3 id="权限不足导致启动失败-xA"><a href="#权限不足导致启动失败-xA" class="headerlink" title="权限不足导致启动失败&#xA;"></a>权限不足导致启动失败&#xA;</h3><h4 id="问题-xA-1"><a href="#问题-xA-1" class="headerlink" title="问题&#xA;"></a>问题&#xA;</h4><p>挂载目录无读写权限。</p><h4 id="解决-xA-1"><a href="#解决-xA-1" class="headerlink" title="解决&#xA;"></a>解决&#xA;</h4><p>递归设置目录权限：</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 ./volumes</span><br></pre></td></tr></table></figure></div><h3 id="服务启动异常-xA"><a href="#服务启动异常-xA" class="headerlink" title="服务启动异常&#xA;"></a>服务启动异常&#xA;</h3><h4 id="解决-xA-2"><a href="#解决-xA-2" class="headerlink" title="解决&#xA;"></a>解决&#xA;</h4><p>通过日志排查问题：&#x20;</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker-compose logs -f  # 查看所有服务日志</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker-compose logs dify-api  # 查看指定服务日志</span><br></pre></td></tr></table></figure></div><p>五、核心操作总结</p><h3 id="镜像替换流程-xA"><a href="#镜像替换流程-xA" class="headerlink" title="镜像替换流程&#xA;"></a>镜像替换流程&#xA;</h3><p>全局前缀替换 → 特殊镜像路径修正 → 基础镜像补充替换</p><h3 id="启动验证流程-xA"><a href="#启动验证流程-xA" class="headerlink" title="启动验证流程&#xA;"></a>启动验证流程&#xA;</h3><p>docker-compose up -d → docker-compose ps → 访问 Web 界面</p><h3 id="关键命令-xA"><a href="#关键命令-xA" class="headerlink" title="关键命令&#xA;"></a>关键命令&#xA;</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/image: /image: docker.1ms.run\\//g&#x27; docker-compose.yaml</span><br><span class="line"></span><br><span class="line">chmod -R 777 ./volumes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Dify 部署流程：镜像源替换与服务启动&lt;/p&gt;
&lt;p&gt;一、Dify 镜像源替换操作&lt;/p&gt;
&lt;h3 id=&quot;批量替换镜像前缀-xA&quot;&gt;&lt;a href=&quot;#批量替换镜像前缀-xA&quot; class=&quot;headerlink&quot; title=&quot;批量替换镜像前缀&amp;#xA;&quot;&gt;&lt;/a&gt;批</summary>
      
    
    
    
    <category term="Dify" scheme="http://example.com/categories/Dify/"/>
    
    
    <category term="Dify" scheme="http://example.com/tags/Dify/"/>
    
    <category term="镜像源" scheme="http://example.com/tags/%E9%95%9C%E5%83%8F%E6%BA%90/"/>
    
  </entry>
  
</feed>
